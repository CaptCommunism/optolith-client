// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var IntMap$OptolithClient = require("../../Data/IntMap.bs.js");
var Static_Erratum$OptolithClient = require("./Static_Erratum.bs.js");
var Static_SourceRef$OptolithClient = require("./Static_SourceRef.bs.js");

function type_(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function domain(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function t(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          types: IntMap$OptolithClient.fromList(Json_decode.field("types", (function (param) {
                      return Json_decode.list(type_, param);
                    }), json)),
          domains: IntMap$OptolithClient.fromList(Json_decode.field("domains", (function (param) {
                      return Json_decode.list(domain, param);
                    }), json)),
          src: Json_decode.field("src", Static_SourceRef$OptolithClient.Decode.list, json),
          errata: Json_decode.field("errata", Static_Erratum$OptolithClient.Decode.list, json)
        };
}

var Decode = {
  type_: type_,
  domain: domain,
  t: t
};

exports.Decode = Decode;
/* IntMap-OptolithClient Not a pure module */
