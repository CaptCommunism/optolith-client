// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var JsonStrict$OptolithClient = require("../Utilities/YAML/JsonStrict.bs.js");
var Static_Erratum$OptolithClient = require("./Static_Erratum.bs.js");
var Static_SourceRef$OptolithClient = require("./Static_SourceRef.bs.js");
var Static_SelectOption$OptolithClient = require("./Static_SelectOption.bs.js");
var Static_Prerequisites$OptolithClient = require("./Static_Prerequisites.bs.js");

function tL10n(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          nameInWiki: JsonStrict$OptolithClient.optionalField("nameInWiki", Json_decode.string, json),
          rules: Json_decode.field("rules", Json_decode.string, json),
          selectOptions: JsonStrict$OptolithClient.optionalField("selectOptions", (function (param) {
                  return Json_decode.list(Static_SelectOption$OptolithClient.Decode.tL10n, param);
                }), json),
          input: JsonStrict$OptolithClient.optionalField("input", Json_decode.string, json),
          range: JsonStrict$OptolithClient.optionalField("range", Json_decode.string, json),
          prerequisites: JsonStrict$OptolithClient.optionalField("prerequisites", Json_decode.string, json),
          prerequisitesIndex: JsonStrict$OptolithClient.optionalField("prerequisitesIndex", Static_Prerequisites$OptolithClient.Decode.tIndexWithLevelL10n, json),
          prerequisitesStart: JsonStrict$OptolithClient.optionalField("prerequisitesStart", Json_decode.string, json),
          prerequisitesEnd: JsonStrict$OptolithClient.optionalField("prerequisitesEnd", Json_decode.string, json),
          apValue: JsonStrict$OptolithClient.optionalField("apValue", Json_decode.string, json),
          apValueAppend: JsonStrict$OptolithClient.optionalField("apValueAppend", Json_decode.string, json),
          src: Json_decode.field("src", Static_SourceRef$OptolithClient.Decode.list, json),
          errata: Json_decode.field("errata", Static_Erratum$OptolithClient.Decode.list, json)
        };
}

var Decode = {
  tL10n: tL10n
};

exports.Decode = Decode;
/* No side effect */
