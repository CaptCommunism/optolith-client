// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var IC$OptolithClient = require("../Utilities/IC.bs.js");
var Maybe$OptolithClient = require("../../Data/Maybe.bs.js");
var JsonStrict$OptolithClient = require("../Utilities/YAML/JsonStrict.bs.js");
var Static_Erratum$OptolithClient = require("./Static_Erratum.bs.js");
var Static_SourceRef$OptolithClient = require("./Static_SourceRef.bs.js");

function tL10n(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          special: Json_decode.field("special", (function (param) {
                  return JsonStrict$OptolithClient.maybe(Json_decode.string, param);
                }), json),
          src: Json_decode.field("src", Static_SourceRef$OptolithClient.Decode.list, json),
          errata: Json_decode.field("errata", Static_Erratum$OptolithClient.Decode.list, json)
        };
}

function tUniv(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          ic: Json_decode.field("ic", IC$OptolithClient.Decode.ic, json),
          primary: Json_decode.field("primary", (function (param) {
                  return Json_decode.list(Json_decode.$$int, param);
                }), json),
          bpr: Json_decode.field("bpr", Json_decode.$$int, json),
          hasNoParry: Json_decode.field("hasNoParry", (function (param) {
                  return JsonStrict$OptolithClient.maybe(Json_decode.bool, param);
                }), json),
          gr: Json_decode.field("gr", Json_decode.$$int, json)
        };
}

function t(univ, l10n) {
  return {
          id: univ.id,
          name: l10n.name,
          ic: univ.ic,
          primary: univ.primary,
          special: l10n.special,
          hasNoParry: Maybe$OptolithClient.fromMaybe(false, univ.hasNoParry),
          bpr: univ.bpr,
          gr: univ.gr,
          src: l10n.src,
          errata: l10n.errata
        };
}

var Decode = {
  tL10n: tL10n,
  tUniv: tUniv,
  t: t
};

exports.Decode = Decode;
/* No side effect */
