// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Maybe$OptolithClient = require("../../../Data/Maybe.bs.js");

function $$const(x, json) {
  if (Caml_obj.caml_equal(json, x)) {
    return x;
  } else {
    throw [
          Json_decode.DecodeError,
          "Expected \"" + (JSON.stringify(json) + ("\", but received: " + JSON.stringify(json)))
        ];
  }
}

function maybe(decode, json) {
  if (json === undefined) {
    return /* Nothing */0;
  } else {
    return /* Just */[Curry._1(decode, json)];
  }
}

function partial_arg_000(param) {
  return Json_decode.map((function (id) {
                return /* One */Block.__(0, [id]);
              }), Json_decode.$$int, param);
}

var partial_arg_001 = /* :: */[
  (function (param) {
      return Json_decode.map((function (id) {
                    return /* Many */Block.__(1, [id]);
                  }), (function (param) {
                    return Json_decode.list(Json_decode.$$int, param);
                  }), param);
    }),
  /* [] */0
];

var partial_arg = /* :: */[
  partial_arg_000,
  partial_arg_001
];

function oneOrManyInt(param) {
  return Json_decode.oneOf(partial_arg, param);
}

function generic(str, json) {
  return /* tuple */[
            Json_decode.field("scope", (function (param) {
                    return $$const(str, param);
                  }), json),
            Json_decode.field("value", Json_decode.$$int, json)
          ][1];
}

function experienceLevel(param) {
  return generic("ExperienceLevel", param);
}

function race(param) {
  return generic("Race", param);
}

function culture(param) {
  return generic("Culture", param);
}

function profession(param) {
  return generic("Profession", param);
}

function attribute(param) {
  return generic("Attribute", param);
}

function advantage(param) {
  return generic("Advantage", param);
}

function disadvantage(param) {
  return generic("Disadvantage", param);
}

function skill(param) {
  return generic("Skill", param);
}

function combatTechnique(param) {
  return generic("CombatTechnique", param);
}

function spell(param) {
  return generic("Spell", param);
}

function curse(param) {
  return generic("Curse", param);
}

function elvenMagicalSong(param) {
  return generic("ElvenMagicalSong", param);
}

function dominationRitual(param) {
  return generic("DominationRitual", param);
}

function magicalMelody(param) {
  return generic("MagicalMelody", param);
}

function magicalDance(param) {
  return generic("MagicalDance", param);
}

function rogueSpell(param) {
  return generic("RogueSpell", param);
}

function animistForce(param) {
  return generic("AnimistForce", param);
}

function geodeRitual(param) {
  return generic("GeodeRitual", param);
}

function zibiljaRitual(param) {
  return generic("ZibiljaRitual", param);
}

function cantrip(param) {
  return generic("Cantrip", param);
}

function liturgicalChant(param) {
  return generic("LiturgicalChant", param);
}

function blessing(param) {
  return generic("Blessing", param);
}

function specialAbility(param) {
  return generic("SpecialAbility", param);
}

function item(param) {
  return generic("Item", param);
}

function equipmentPackage(param) {
  return generic("EquipmentPackage", param);
}

function hitZoneArmor(param) {
  return generic("HitZoneArmor", param);
}

function familiar(param) {
  return generic("Familiar", param);
}

function animal(param) {
  return generic("Animal", param);
}

function focusRule(param) {
  return generic("FocusRule", param);
}

function optionalRule(param) {
  return generic("OptionalRule", param);
}

function condition(param) {
  return generic("Condition", param);
}

function state(param) {
  return generic("State", param);
}

var Id = {
  generic: generic,
  experienceLevel: experienceLevel,
  race: race,
  culture: culture,
  profession: profession,
  attribute: attribute,
  advantage: advantage,
  disadvantage: disadvantage,
  skill: skill,
  combatTechnique: combatTechnique,
  spell: spell,
  curse: curse,
  elvenMagicalSong: elvenMagicalSong,
  dominationRitual: dominationRitual,
  magicalMelody: magicalMelody,
  magicalDance: magicalDance,
  rogueSpell: rogueSpell,
  animistForce: animistForce,
  geodeRitual: geodeRitual,
  zibiljaRitual: zibiljaRitual,
  cantrip: cantrip,
  liturgicalChant: liturgicalChant,
  blessing: blessing,
  specialAbility: specialAbility,
  item: item,
  equipmentPackage: equipmentPackage,
  hitZoneArmor: hitZoneArmor,
  familiar: familiar,
  animal: animal,
  focusRule: focusRule,
  optionalRule: optionalRule,
  condition: condition,
  state: state
};

function l10n(json) {
  var first = Json_decode.field("firstPage", Json_decode.$$int, json);
  var mlast = Json_decode.field("lastPage", (function (param) {
          return maybe(Json_decode.$$int, param);
        }), json);
  return {
          id: Json_decode.field("id", Json_decode.string, json),
          page: Maybe$OptolithClient.maybe(/* tuple */[
                first,
                first
              ], (function (last) {
                  return /* tuple */[
                          first,
                          last
                        ];
                }), mlast)
        };
}

function fromJson(param) {
  return Json_decode.list(l10n, param);
}

var SourceRefs = {
  fromJson: fromJson
};

function l10n$1(json) {
  return {
          date: Json_decode.field("id", Json_decode.date, json),
          description: Json_decode.field("id", Json_decode.string, json)
        };
}

function fromJson$1(json) {
  return Maybe$OptolithClient.fromMaybe(/* [] */0, maybe((function (param) {
                    return Json_decode.list(l10n$1, param);
                  }), json));
}

var Errata = {
  fromJson: fromJson$1
};

function fromJson$2(json) {
  var str = Json_decode.string(json);
  switch (str) {
    case "f" :
        return /* Female */1;
    case "m" :
        return /* Male */0;
    default:
      throw [
            Json_decode.DecodeError,
            "Unknown sex prerequisite: " + str
          ];
  }
}

var Sex = {
  fromJson: fromJson$2
};

function partial_arg_000$1(json) {
  return {
          id: oneOrManyInt(json),
          active: true
        };
}

var partial_arg_001$1 = /* :: */[
  (function (json) {
      return {
              id: Json_decode.field("id", oneOrManyInt, json),
              active: Json_decode.field("active", Json_decode.bool, json)
            };
    }),
  /* [] */0
];

var partial_arg$1 = /* :: */[
  partial_arg_000$1,
  partial_arg_001$1
];

function fromJson$3(param) {
  return Json_decode.oneOf(partial_arg$1, param);
}

var Race = {
  fromJson: fromJson$3
};

var Culture = {
  fromJson: oneOrManyInt
};

function typeEnum(str) {
  switch (str) {
    case "blessed" :
        return /* Blessed */1;
    case "magical" :
        return /* Magical */0;
    default:
      throw [
            Json_decode.DecodeError,
            "Unknown primary attribute type: " + str
          ];
  }
}

function fromJson$4(json) {
  return {
          value: Json_decode.field("value", Json_decode.$$int, json),
          scope: typeEnum(Json_decode.field("type", Json_decode.string, json))
        };
}

var PrimaryAttribute = {
  fromJson: fromJson$4
};

function fromJson$5(json) {
  return {
          category: Json_decode.field("category", Json_decode.$$int, json),
          domain: Json_decode.field("domain", (function (param) {
                  return maybe(oneOrManyInt, param);
                }), json),
          level: Json_decode.field("level", (function (param) {
                  return maybe(Json_decode.$$int, param);
                }), json)
        };
}

var Pact = {
  fromJson: fromJson$5
};

var SocialStatus = {
  fromJson: Json_decode.$$int
};

function id(json) {
  return Json_decode.oneOf(/* :: */[
              (function (param) {
                  return Json_decode.map((function (x) {
                                return /* Advantage */Block.__(0, [x]);
                              }), advantage, param);
                }),
              /* :: */[
                (function (param) {
                    return Json_decode.map((function (x) {
                                  return /* Disadvantage */Block.__(1, [x]);
                                }), disadvantage, param);
                  }),
                /* :: */[
                  (function (param) {
                      return Json_decode.map((function (x) {
                                    return /* SpecialAbility */Block.__(2, [x]);
                                  }), specialAbility, param);
                    }),
                  /* [] */0
                ]
              ]
            ], json);
}

function selectOptionId(json) {
  return Json_decode.oneOf(/* :: */[
              (function (param) {
                  return Json_decode.map((function (x) {
                                return /* Generic */Block.__(0, [x]);
                              }), Json_decode.$$int, param);
                }),
              /* :: */[
                (function (param) {
                    return Json_decode.map((function (x) {
                                  return /* Skill */Block.__(1, [x]);
                                }), skill, param);
                  }),
                /* :: */[
                  (function (param) {
                      return Json_decode.map((function (x) {
                                    return /* CombatTechnique */Block.__(2, [x]);
                                  }), combatTechnique, param);
                    }),
                  /* [] */0
                ]
              ]
            ], json);
}

function fromJson$6(json) {
  return {
          id: Json_decode.field("id", id, json),
          active: Json_decode.field("active", Json_decode.bool, json),
          sid: Json_decode.field("sid", (function (param) {
                  return maybe(selectOptionId, param);
                }), json),
          sid2: Json_decode.field("sid2", (function (param) {
                  return maybe(selectOptionId, param);
                }), json),
          level: Json_decode.field("level", (function (param) {
                  return maybe(Json_decode.$$int, param);
                }), json)
        };
}

var Activatable = {
  id: id,
  selectOptionId: selectOptionId,
  fromJson: fromJson$6
};

function fromJson$7(json) {
  return {
          id: Json_decode.field("id", (function (param) {
                  return Json_decode.list(id, param);
                }), json),
          active: Json_decode.field("active", Json_decode.bool, json),
          sid: Json_decode.field("sid", (function (param) {
                  return maybe(selectOptionId, param);
                }), json),
          sid2: Json_decode.field("sid2", (function (param) {
                  return maybe(selectOptionId, param);
                }), json),
          level: Json_decode.field("level", (function (param) {
                  return maybe(Json_decode.$$int, param);
                }), json)
        };
}

var ActivatableMultiEntry = {
  fromJson: fromJson$7
};

function fromJson$8(json) {
  return {
          id: Json_decode.field("id", id, json),
          active: Json_decode.field("active", Json_decode.bool, json),
          sid: Json_decode.field("sid", (function (param) {
                  return Json_decode.list(selectOptionId, param);
                }), json),
          sid2: Json_decode.field("sid2", (function (param) {
                  return maybe(selectOptionId, param);
                }), json),
          level: Json_decode.field("tier", (function (param) {
                  return maybe(Json_decode.$$int, param);
                }), json)
        };
}

var ActivatableMultiSelect = {
  fromJson: fromJson$8
};

function id$1(json) {
  return Json_decode.oneOf(/* :: */[
              (function (param) {
                  return Json_decode.map((function (x) {
                                return /* Spell */Block.__(0, [x]);
                              }), spell, param);
                }),
              /* :: */[
                (function (param) {
                    return Json_decode.map((function (x) {
                                  return /* LiturgicalChant */Block.__(1, [x]);
                                }), liturgicalChant, param);
                  }),
                /* [] */0
              ]
            ], json);
}

function fromJson$9(json) {
  return {
          id: Json_decode.field("id", id$1, json),
          active: Json_decode.field("active", Json_decode.bool, json)
        };
}

var ActivatableSkill = {
  id: id$1,
  fromJson: fromJson$9
};

function increasableId(json) {
  return Json_decode.oneOf(/* :: */[
              (function (param) {
                  return Json_decode.map((function (x) {
                                return /* Attribute */Block.__(0, [x]);
                              }), attribute, param);
                }),
              /* :: */[
                (function (param) {
                    return Json_decode.map((function (x) {
                                  return /* Skill */Block.__(1, [x]);
                                }), skill, param);
                  }),
                /* :: */[
                  (function (param) {
                      return Json_decode.map((function (x) {
                                    return /* CombatTechnique */Block.__(2, [x]);
                                  }), combatTechnique, param);
                    }),
                  /* :: */[
                    (function (param) {
                        return Json_decode.map((function (x) {
                                      return /* Spell */Block.__(3, [x]);
                                    }), spell, param);
                      }),
                    /* :: */[
                      (function (param) {
                          return Json_decode.map((function (x) {
                                        return /* LiturgicalChant */Block.__(4, [x]);
                                      }), liturgicalChant, param);
                        }),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ], json);
}

function fromJson$10(json) {
  return {
          id: Json_decode.field("id", increasableId, json),
          value: Json_decode.field("value", Json_decode.$$int, json)
        };
}

var Increasable = {
  increasableId: increasableId,
  fromJson: fromJson$10
};

function fromJson$11(json) {
  return {
          id: Json_decode.field("id", (function (param) {
                  return Json_decode.list(increasableId, param);
                }), json),
          value: Json_decode.field("value", Json_decode.$$int, json)
        };
}

var IncreasableMultiEntry = {
  fromJson: fromJson$11
};

var Prerequisites = {
  Sex: Sex,
  Race: Race,
  Culture: Culture,
  PrimaryAttribute: PrimaryAttribute,
  Pact: Pact,
  SocialStatus: SocialStatus,
  Activatable: Activatable,
  ActivatableMultiEntry: ActivatableMultiEntry,
  ActivatableMultiSelect: ActivatableMultiSelect,
  ActivatableSkill: ActivatableSkill,
  Increasable: Increasable,
  IncreasableMultiEntry: IncreasableMultiEntry
};

function fromJson$12(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          description: Json_decode.field("description", (function (param) {
                  return maybe(Json_decode.string, param);
                }), json)
        };
}

var SelectOptionsL10n = {
  fromJson: fromJson$12
};

function partial_arg_000$2(param) {
  return Json_decode.map((function (param) {
                return /* A */0;
              }), (function (param) {
                return $$const("A", param);
              }), param);
}

var partial_arg_001$2 = /* :: */[
  (function (param) {
      return Json_decode.map((function (param) {
                    return /* B */1;
                  }), (function (param) {
                    return $$const("B", param);
                  }), param);
    }),
  /* :: */[
    (function (param) {
        return Json_decode.map((function (param) {
                      return /* C */2;
                    }), (function (param) {
                      return $$const("C", param);
                    }), param);
      }),
    /* :: */[
      (function (param) {
          return Json_decode.map((function (param) {
                        return /* D */3;
                      }), (function (param) {
                        return $$const("D", param);
                      }), param);
        }),
      /* [] */0
    ]
  ]
];

var partial_arg$2 = /* :: */[
  partial_arg_000$2,
  partial_arg_001$2
];

function fromJson$13(param) {
  return Json_decode.oneOf(partial_arg$2, param);
}

var ICUniv = {
  fromJson: fromJson$13
};

function fromJson$14(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          cost: Json_decode.field("cost", (function (param) {
                  return maybe(Json_decode.$$int, param);
                }), json)
        };
}

var SelectOptionsUniv = {
  fromJson: fromJson$14
};

function l10n$2(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$15(yaml) {
  return Json_decode.list(l10n$2, yaml.advantagesL10n);
}

var AdvantagesL10n = {
  fromJson: fromJson$15
};

function univ(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$16(yaml) {
  return Json_decode.list(univ, yaml.advantagesUniv);
}

var AdvantagesUniv = {
  fromJson: fromJson$16
};

function l10n$3(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$17(yaml) {
  return Json_decode.list(l10n$3, yaml.animistForcesL10n);
}

var AnimistForcesL10n = {
  fromJson: fromJson$17
};

function univ$1(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$18(yaml) {
  return Json_decode.list(univ$1, yaml.animistForcesUniv);
}

var AnimistForcesUniv = {
  fromJson: fromJson$18
};

function l10n$4(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$19(yaml) {
  return Json_decode.list(l10n$4, yaml.arcaneBardTraditionsL10n);
}

var ArcaneBardTraditionsL10n = {
  fromJson: fromJson$19
};

function l10n$5(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$20(yaml) {
  return Json_decode.list(l10n$5, yaml.arcaneDancerTraditionsL10n);
}

var ArcaneDancerTraditionsL10n = {
  fromJson: fromJson$20
};

function l10n$6(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$21(yaml) {
  return Json_decode.list(l10n$6, yaml.armorTypesL10n);
}

var ArmorTypesL10n = {
  fromJson: fromJson$21
};

function l10n$7(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$22(yaml) {
  return Json_decode.list(l10n$7, yaml.aspectsL10n);
}

var AspectsL10n = {
  fromJson: fromJson$22
};

function l10n$8(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          short: Json_decode.field("short", Json_decode.string, json)
        };
}

function fromJson$23(yaml) {
  return Json_decode.list(l10n$8, yaml.attributesL10n);
}

var AttributesL10n = {
  fromJson: fromJson$23
};

function l10n$9(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json)
        };
}

function fromJson$24(yaml) {
  return Json_decode.list(l10n$9, yaml.blessedTraditionsL10n);
}

var BlessedTraditionsL10n = {
  fromJson: fromJson$24
};

function univ$2(json) {
  return {
          numId: Json_decode.field("numId", Json_decode.$$int, json),
          id: Json_decode.field("id", Json_decode.$$int, json),
          primary: Json_decode.field("primary", Json_decode.$$int, json),
          aspects: Json_decode.field("aspects", (function (param) {
                  return maybe((function (param) {
                                return Json_decode.pair(Json_decode.$$int, Json_decode.$$int, param);
                              }), param);
                }), json)
        };
}

function fromJson$25(yaml) {
  return Json_decode.list(univ$2, yaml.blessedTraditionsUniv);
}

var BlessedTraditionsUniv = {
  fromJson: fromJson$25
};

function l10n$10(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          effect: Json_decode.field("effect", Json_decode.string, json),
          range: Json_decode.field("range", Json_decode.string, json),
          duration: Json_decode.field("duration", Json_decode.string, json),
          target: Json_decode.field("target", Json_decode.string, json),
          src: Json_decode.list(l10n, json),
          errata: fromJson$1(json)
        };
}

function fromJson$26(yaml) {
  return Json_decode.list(l10n$10, yaml.blessingsL10n);
}

var BlessingsL10n = {
  fromJson: fromJson$26
};

function univ$3(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          traditions: Json_decode.field("traditions", (function (param) {
                  return Json_decode.list(Json_decode.$$int, param);
                }), json)
        };
}

function fromJson$27(yaml) {
  return Json_decode.list(univ$3, yaml.blessingsUniv);
}

var BlessingsUniv = {
  fromJson: fromJson$27
};

function l10n$11(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$28(yaml) {
  return Json_decode.list(l10n$11, yaml.brewsL10n);
}

var BrewsL10n = {
  fromJson: fromJson$28
};

function l10n$12(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          effect: Json_decode.field("effect", Json_decode.string, json),
          range: Json_decode.field("range", Json_decode.string, json),
          duration: Json_decode.field("duration", Json_decode.string, json),
          target: Json_decode.field("target", Json_decode.string, json),
          src: Json_decode.list(l10n, json),
          errata: fromJson$1(json)
        };
}

function fromJson$29(yaml) {
  return Json_decode.list(l10n$12, yaml.cantripsL10n);
}

var CantripsL10n = {
  fromJson: fromJson$29
};

function univ$4(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          traditions: Json_decode.field("traditions", (function (param) {
                  return Json_decode.list(Json_decode.$$int, param);
                }), json),
          property: Json_decode.field("property", Json_decode.$$int, json),
          activatablePrerequisites: Maybe$OptolithClient.fromMaybe(/* [] */0, Json_decode.field("activatablePrerequisites", (function (param) {
                      return maybe((function (param) {
                                    return Json_decode.list(fromJson$6, param);
                                  }), param);
                    }), json))
        };
}

function fromJson$30(yaml) {
  return Json_decode.list(univ$4, yaml.cantripsUniv);
}

var CantripsUniv = {
  fromJson: fromJson$30
};

function l10n$13(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$31(yaml) {
  return Json_decode.list(l10n$13, yaml.combatSpecialAbilityGroupsL10n);
}

var CombatSpecialAbilityGroupsL10n = {
  fromJson: fromJson$31
};

function l10n$14(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$32(yaml) {
  return Json_decode.list(l10n$14, yaml.combatTechniqueGroupsL10n);
}

var CombatTechniqueGroupsL10n = {
  fromJson: fromJson$32
};

function l10n$15(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          special: Json_decode.field("special", (function (param) {
                  return maybe(Json_decode.string, param);
                }), json),
          src: Json_decode.field("src", fromJson, json),
          errata: Json_decode.field("errata", fromJson$1, json)
        };
}

function fromJson$33(yaml) {
  return Json_decode.list(l10n$15, yaml.combatTechniquesL10n);
}

var CombatTechniquesL10n = {
  fromJson: fromJson$33
};

function univ$5(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          ic: Json_decode.field("ic", fromJson$13, json),
          primary: Json_decode.field("primary", (function (param) {
                  return Json_decode.list(Json_decode.$$int, param);
                }), json),
          bpr: Json_decode.field("bpr", Json_decode.$$int, json),
          hasNoParry: Maybe$OptolithClient.fromMaybe(false, Json_decode.field("hasNoParry", (function (param) {
                      return maybe(Json_decode.bool, param);
                    }), json)),
          gr: Json_decode.field("gr", Json_decode.$$int, json)
        };
}

function fromJson$34(yaml) {
  return Json_decode.list(univ$5, yaml.combatTechniquesUniv);
}

var CombatTechniquesUniv = {
  fromJson: fromJson$34
};

function l10n$16(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          description: Json_decode.field("description", (function (param) {
                  return maybe(Json_decode.string, param);
                }), json),
          levelColumnDescription: Json_decode.field("levelDescription", (function (param) {
                  return maybe(Json_decode.string, param);
                }), json),
          levelDescriptions: /* tuple */[
            Json_decode.field("level1", Json_decode.string, json),
            Json_decode.field("level2", Json_decode.string, json),
            Json_decode.field("level3", Json_decode.string, json),
            Json_decode.field("level4", Json_decode.string, json)
          ],
          src: Json_decode.field("src", fromJson, json),
          errata: Json_decode.field("errata", fromJson$1, json)
        };
}

function fromJson$35(yaml) {
  return Json_decode.list(l10n$16, yaml.conditionsL10n);
}

var ConditionsL10n = {
  fromJson: fromJson$35
};

function l10n$17(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$36(yaml) {
  return Json_decode.list(l10n$17, yaml.culturesL10n);
}

var CulturesL10n = {
  fromJson: fromJson$36
};

function univ$6(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$37(yaml) {
  return Json_decode.list(univ$6, yaml.culturesUniv);
}

var CulturesUniv = {
  fromJson: fromJson$37
};

function l10n$18(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$38(yaml) {
  return Json_decode.list(l10n$18, yaml.cursesL10n);
}

var CursesL10n = {
  fromJson: fromJson$38
};

function univ$7(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$39(yaml) {
  return Json_decode.list(univ$7, yaml.cursesUniv);
}

var CursesUniv = {
  fromJson: fromJson$39
};

function l10n$19(json) {
  return {
          id: Json_decode.field("id", Json_decode.string, json),
          name: Json_decode.field("name", Json_decode.string, json),
          short: Json_decode.field("short", Json_decode.string, json),
          calc: Json_decode.field("calc", Json_decode.string, json),
          calcHalfPrimary: Json_decode.field("calcHalfPrimary", (function (param) {
                  return maybe(Json_decode.string, param);
                }), json),
          calcNoPrimary: Json_decode.field("calcNoPrimary", (function (param) {
                  return maybe(Json_decode.string, param);
                }), json)
        };
}

function fromJson$40(yaml) {
  return Json_decode.list(l10n$19, yaml.derivedCharacteristicsL10n);
}

var DerivedCharacteristicsL10n = {
  fromJson: fromJson$40
};

function l10n$20(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$41(yaml) {
  return Json_decode.list(l10n$20, yaml.disadvantagesL10n);
}

var DisadvantagesL10n = {
  fromJson: fromJson$41
};

function univ$8(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$42(yaml) {
  return Json_decode.list(univ$8, yaml.disadvantagesUniv);
}

var DisadvantagesUniv = {
  fromJson: fromJson$42
};

function l10n$21(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$43(yaml) {
  return Json_decode.list(l10n$21, yaml.dominationRitualsL10n);
}

var DominationRitualsL10n = {
  fromJson: fromJson$43
};

function univ$9(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$44(yaml) {
  return Json_decode.list(univ$9, yaml.dominationRitualsUniv);
}

var DominationRitualsUniv = {
  fromJson: fromJson$44
};

function l10n$22(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$45(yaml) {
  return Json_decode.list(l10n$22, yaml.elvenMagicalSongsL10n);
}

var ElvenMagicalSongsL10n = {
  fromJson: fromJson$45
};

function univ$10(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$46(yaml) {
  return Json_decode.list(univ$10, yaml.elvenMagicalSongsUniv);
}

var ElvenMagicalSongsUniv = {
  fromJson: fromJson$46
};

function l10n$23(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$47(yaml) {
  return Json_decode.list(l10n$23, yaml.equipmentL10n);
}

var EquipmentL10n = {
  fromJson: fromJson$47
};

function univ$11(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$48(yaml) {
  return Json_decode.list(univ$11, yaml.equipmentUniv);
}

var EquipmentUniv = {
  fromJson: fromJson$48
};

function l10n$24(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json),
          Json_decode.id
        ];
}

function fromJson$49(yaml) {
  return Json_decode.list(l10n$24, yaml.equipmentGroupsL10n);
}

var EquipmentGroupsL10n = {
  fromJson: fromJson$49
};

function l10n$25(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          src: Json_decode.list(l10n, json),
          errata: fromJson$1(json)
        };
}

function fromJson$50(yaml) {
  return Json_decode.list(l10n$25, yaml.equipmentPackagesL10n);
}

var EquipmentPackagesL10n = {
  fromJson: fromJson$50
};

function item$1(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          amount: Maybe$OptolithClient.fromMaybe(1, Json_decode.field("amount", (function (param) {
                      return maybe(Json_decode.$$int, param);
                    }), json))
        };
}

function univ$12(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          items: Json_decode.field("items", (function (param) {
                  return Json_decode.list(item$1, param);
                }), json)
        };
}

function fromJson$51(yaml) {
  return Json_decode.list(univ$12, yaml.equipmentPackagesUniv);
}

var EquipmentPackagesUniv = {
  fromJson: fromJson$51
};

function l10n$26(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json)
        };
}

function fromJson$52(yaml) {
  return Json_decode.list(l10n$26, yaml.experienceLevelsL10n);
}

var ExperienceLevelsL10n = {
  fromJson: fromJson$52
};

function univ$13(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          ap: Json_decode.field("ap", Json_decode.$$int, json),
          maxAttributeValue: Json_decode.field("maxAttributeValue", Json_decode.$$int, json),
          maxSkillRating: Json_decode.field("maxSkillRating", Json_decode.$$int, json),
          maxCombatTechniqueRating: Json_decode.field("maxCombatTechniqueRating", Json_decode.$$int, json),
          maxTotalAttributeValues: Json_decode.field("maxTotalAttributeValues", Json_decode.$$int, json),
          maxSpellsLiturgicalChants: Json_decode.field("maxSpellsLiturgicalChants", Json_decode.$$int, json),
          maxUnfamiliarSpells: Json_decode.field("maxUnfamiliarSpells", Json_decode.$$int, json)
        };
}

function fromJson$53(yaml) {
  return Json_decode.list(univ$13, yaml.experienceLevelsUniv);
}

var ExperienceLevelsUniv = {
  fromJson: fromJson$53
};

function l10n$27(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$54(yaml) {
  return Json_decode.list(l10n$27, yaml.eyeColorsL10n);
}

var EyeColorsL10n = {
  fromJson: fromJson$54
};

function l10n$28(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          description: Json_decode.field("description", Json_decode.string, json),
          src: Json_decode.list(l10n, json),
          errata: fromJson$1(json)
        };
}

function fromJson$55(yaml) {
  return Json_decode.list(l10n$28, yaml.focusRulesL10n);
}

var FocusRulesL10n = {
  fromJson: fromJson$55
};

function univ$14(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          subject: Json_decode.field("subject", Json_decode.$$int, json),
          level: Json_decode.field("level", Json_decode.$$int, json)
        };
}

function fromJson$56(yaml) {
  return Json_decode.list(univ$14, yaml.focusRulesUniv);
}

var FocusRulesUniv = {
  fromJson: fromJson$56
};

function l10n$29(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$57(yaml) {
  return Json_decode.list(l10n$29, yaml.geodeRitualsL10n);
}

var GeodeRitualsL10n = {
  fromJson: fromJson$57
};

function univ$15(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$58(yaml) {
  return Json_decode.list(univ$15, yaml.geodeRitualsUniv);
}

var GeodeRitualsUniv = {
  fromJson: fromJson$58
};

function l10n$30(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$59(yaml) {
  return Json_decode.list(l10n$30, yaml.hairColorsL10n);
}

var HairColorsL10n = {
  fromJson: fromJson$59
};

function l10n$31(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$60(yaml) {
  return Json_decode.list(l10n$31, yaml.liturgicalChantEnhancementsL10n);
}

var LiturgicalChantEnhancementsL10n = {
  fromJson: fromJson$60
};

function univ$16(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$61(yaml) {
  return Json_decode.list(univ$16, yaml.liturgicalChantEnhancementsUniv);
}

var LiturgicalChantEnhancementsUniv = {
  fromJson: fromJson$61
};

function l10n$32(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$62(yaml) {
  return Json_decode.list(l10n$32, yaml.liturgicalChantGroupsL10n);
}

var LiturgicalChantGroupsL10n = {
  fromJson: fromJson$62
};

function l10n$33(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$63(yaml) {
  return Json_decode.list(l10n$33, yaml.liturgicalChantsL10n);
}

var LiturgicalChantsL10n = {
  fromJson: fromJson$63
};

function univ$17(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$64(yaml) {
  return Json_decode.list(univ$17, yaml.liturgicalChantsUniv);
}

var LiturgicalChantsUniv = {
  fromJson: fromJson$64
};

function l10n$34(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$65(yaml) {
  return Json_decode.list(l10n$34, yaml.magicalDancesL10n);
}

var MagicalDancesL10n = {
  fromJson: fromJson$65
};

function univ$18(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$66(yaml) {
  return Json_decode.list(univ$18, yaml.magicalDancesUniv);
}

var MagicalDancesUniv = {
  fromJson: fromJson$66
};

function l10n$35(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$67(yaml) {
  return Json_decode.list(l10n$35, yaml.magicalMelodiesL10n);
}

var MagicalMelodiesL10n = {
  fromJson: fromJson$67
};

function univ$19(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$68(yaml) {
  return Json_decode.list(univ$19, yaml.magicalMelodiesUniv);
}

var MagicalMelodiesUniv = {
  fromJson: fromJson$68
};

function l10n$36(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json)
        };
}

function fromJson$69(yaml) {
  return Json_decode.list(l10n$36, yaml.magicalTraditionsL10n);
}

var MagicalTraditionsL10n = {
  fromJson: fromJson$69
};

function univ$20(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          numId: Json_decode.field("numId", Json_decode.$$int, json),
          primary: Json_decode.field("primary", (function (param) {
                  return maybe(Json_decode.$$int, param);
                }), json),
          aeMod: Json_decode.field("aeMod", (function (param) {
                  return maybe(Json_decode.$$float, param);
                }), json),
          canLearnCantrips: Json_decode.field("canLearnCantrips", Json_decode.bool, json),
          canLearnSpells: Json_decode.field("canLearnSpells", Json_decode.bool, json),
          canLearnRituals: Json_decode.field("canLearnRituals", Json_decode.bool, json),
          allowMultipleTraditions: Json_decode.field("allowMultipleTraditions", Json_decode.bool, json),
          isDisAdvAPMaxHalved: Json_decode.field("isDisAdvAPMaxHalved", Json_decode.bool, json),
          areDisAdvRequiredApplyToMagActionsOrApps: Json_decode.field("areDisAdvRequiredApplyToMagActionsOrApps", Json_decode.bool, json)
        };
}

function fromJson$70(yaml) {
  return Json_decode.list(univ$20, yaml.magicalTraditionsUniv);
}

var MagicalTraditionsUniv = {
  fromJson: fromJson$70
};

function l10n$37(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          description: Json_decode.field("description", Json_decode.string, json),
          src: Json_decode.list(l10n, json),
          errata: fromJson$1(json)
        };
}

function fromJson$71(yaml) {
  return Json_decode.list(l10n$37, yaml.optionalRulesL10n);
}

var OptionalRulesL10n = {
  fromJson: fromJson$71
};

function type_(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function domain(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function l10n$38(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          types: Json_decode.field("types", (function (param) {
                  return Json_decode.list(type_, param);
                }), json),
          domains: Json_decode.field("domains", (function (param) {
                  return Json_decode.list(domain, param);
                }), json),
          src: Json_decode.list(l10n, json),
          errata: fromJson$1(json)
        };
}

function fromJson$72(yaml) {
  return Json_decode.list(l10n$38, yaml.pactsL10n);
}

var PactsL10n = {
  fromJson: fromJson$72
};

function l10n$39(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$73(yaml) {
  return Json_decode.list(l10n$39, yaml.professionsL10n);
}

var ProfessionsL10n = {
  fromJson: fromJson$73
};

var SkillSpecialization = {
  fromJson: oneOrManyInt
};

var LanguagesAndScripts = {
  fromJson: Json_decode.$$int
};

function second(json) {
  return {
          amount: Json_decode.field("amount", Json_decode.$$int, json),
          value: Json_decode.field("value", Json_decode.$$int, json)
        };
}

function fromJson$74(json) {
  return {
          amount: Json_decode.field("amount", Json_decode.$$int, json),
          value: Json_decode.field("value", Json_decode.$$int, json),
          second: Json_decode.field("second", (function (param) {
                  return maybe(second, param);
                }), json),
          sid: Json_decode.field("sid", (function (param) {
                  return Json_decode.list(Json_decode.$$int, param);
                }), json)
        };
}

var CombatTechniques = {
  second: second,
  fromJson: fromJson$74
};

function fromJson$75(json) {
  return {
          amount: Json_decode.field("amount", Json_decode.$$int, json),
          sid: Json_decode.field("sid", (function (param) {
                  return Json_decode.list(Json_decode.$$int, param);
                }), json)
        };
}

var Cantrips = {
  fromJson: fromJson$75
};

var Curses = {
  fromJson: Json_decode.$$int
};

function fromJson$76(json) {
  return {
          gr: Json_decode.field("gr", (function (param) {
                  return maybe(Json_decode.$$int, param);
                }), json),
          value: Json_decode.field("value", Json_decode.$$int, json)
        };
}

var Skills = {
  fromJson: fromJson$76
};

function fromJson$77(param) {
  return Json_decode.list(Json_decode.$$int, param);
}

var TerrainKnowledge = {
  fromJson: fromJson$77
};

var Options = {
  SkillSpecialization: SkillSpecialization,
  LanguagesAndScripts: LanguagesAndScripts,
  CombatTechniques: CombatTechniques,
  Cantrips: Cantrips,
  Curses: Curses,
  Skills: Skills,
  TerrainKnowledge: TerrainKnowledge
};

function univ$21(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$78(yaml) {
  return Json_decode.list(univ$21, yaml.professionsUniv);
}

var ProfessionsUniv = {
  Options: Options,
  fromJson: fromJson$78
};

function l10n$40(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$79(yaml) {
  return Json_decode.list(l10n$40, yaml.professionVariantsL10n);
}

var ProfessionVariantsL10n = {
  fromJson: fromJson$79
};

function fromJson$80(json) {
  return Json_decode.oneOf(/* :: */[
              (function (json) {
                  return /* Override */[oneOrManyInt(json)];
                }),
              /* :: */[
                (function (json) {
                    return Json_decode.map((function (param) {
                                  return /* Remove */0;
                                }), (function (param) {
                                  return $$const(false, param);
                                }), json);
                  }),
                /* [] */0
              ]
            ], json);
}

var SkillSpecialization$1 = {
  fromJson: fromJson$80
};

function second$1(json) {
  return Json_decode.oneOf(/* :: */[
              (function (json) {
                  return /* Override */[second(json)];
                }),
              /* :: */[
                (function (json) {
                    return Json_decode.map((function (param) {
                                  return /* Remove */0;
                                }), (function (param) {
                                  return $$const(false, param);
                                }), json);
                  }),
                /* [] */0
              ]
            ], json);
}

function fromJson$81(json) {
  return Json_decode.oneOf(/* :: */[
              (function (json) {
                  return /* Override */[{
                            amount: Json_decode.field("amount", Json_decode.$$int, json),
                            value: Json_decode.field("value", Json_decode.$$int, json),
                            second: Json_decode.field("second", (function (param) {
                                    return maybe(second$1, param);
                                  }), json),
                            sid: Json_decode.field("sid", (function (param) {
                                    return Json_decode.list(Json_decode.$$int, param);
                                  }), json)
                          }];
                }),
              /* :: */[
                (function (json) {
                    return Json_decode.map((function (param) {
                                  return /* Remove */0;
                                }), (function (param) {
                                  return $$const(false, param);
                                }), json);
                  }),
                /* [] */0
              ]
            ], json);
}

var CombatTechniques$1 = {
  second: second$1,
  fromJson: fromJson$81
};

var Options$1 = {
  SkillSpecialization: SkillSpecialization$1,
  CombatTechniques: CombatTechniques$1
};

function univ$22(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$82(yaml) {
  return Json_decode.list(univ$22, yaml.professionVariantsUniv);
}

var ProfessionVariantsUniv = {
  Options: Options$1,
  fromJson: fromJson$82
};

function l10n$41(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$83(yaml) {
  return Json_decode.list(l10n$41, yaml.propertiesL10n);
}

var PropertiesL10n = {
  fromJson: fromJson$83
};

function l10n$42(json) {
  return {
          id: Json_decode.field("id", Json_decode.string, json),
          name: Json_decode.field("name", Json_decode.string, json),
          short: Json_decode.field("short", Json_decode.string, json),
          isCore: Json_decode.field("isCore", Json_decode.bool, json),
          isAdultContent: Json_decode.field("isAdultContent", Json_decode.bool, json)
        };
}

function fromJson$84(json) {
  return Json_decode.list(l10n$42, json.booksL10n);
}

var PublicationsL10n = {
  fromJson: fromJson$84
};

function l10n$43(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$85(yaml) {
  return Json_decode.list(l10n$43, yaml.racesL10n);
}

var RacesL10n = {
  fromJson: fromJson$85
};

function univ$23(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$86(yaml) {
  return Json_decode.list(univ$23, yaml.racesUniv);
}

var RacesUniv = {
  fromJson: fromJson$86
};

function l10n$44(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$87(yaml) {
  return Json_decode.list(l10n$44, yaml.raceVariantsL10n);
}

var RaceVariantL10n = {
  fromJson: fromJson$87
};

function univ$24(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$88(yaml) {
  return Json_decode.list(univ$24, yaml.raceVariantsUniv);
}

var RaceVariantUniv = {
  fromJson: fromJson$88
};

function l10n$45(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$89(yaml) {
  return Json_decode.list(l10n$45, yaml.reachesL10n);
}

var ReachesL10n = {
  fromJson: fromJson$89
};

function l10n$46(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$90(yaml) {
  return Json_decode.list(l10n$46, yaml.rogueSpellsL10n);
}

var RogueSpellsL10n = {
  fromJson: fromJson$90
};

function univ$25(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$91(yaml) {
  return Json_decode.list(univ$25, yaml.rogueSpellsUniv);
}

var RogueSpellsUniv = {
  fromJson: fromJson$91
};

function l10n$47(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          fullName: Json_decode.field("fullName", Json_decode.string, json)
        };
}

function fromJson$92(yaml) {
  return Json_decode.list(l10n$47, yaml.skillGroupsL10n);
}

var SkillGroupsL10n = {
  fromJson: fromJson$92
};

function application(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function use(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function l10n$48(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          applications: Json_decode.field("applications", (function (param) {
                  return Json_decode.list(application, param);
                }), json),
          applicationsInput: Json_decode.field("applicationsInput", (function (param) {
                  return maybe(Json_decode.string, param);
                }), json),
          uses: Json_decode.field("uses", (function (param) {
                  return Json_decode.list(use, param);
                }), json),
          encDescription: Json_decode.field("encDescription", (function (param) {
                  return maybe(Json_decode.string, param);
                }), json),
          tools: Json_decode.field("tools", (function (param) {
                  return maybe(Json_decode.string, param);
                }), json),
          quality: Json_decode.field("quality", Json_decode.string, json),
          failed: Json_decode.field("failed", Json_decode.string, json),
          critical: Json_decode.field("critical", Json_decode.string, json),
          botch: Json_decode.field("botch", Json_decode.string, json),
          src: Json_decode.field("src", fromJson, json),
          errata: Json_decode.field("errata", fromJson$1, json)
        };
}

function fromJson$93(yaml) {
  return Json_decode.list(l10n$48, yaml.skillsL10n);
}

var SkillsL10n = {
  fromJson: fromJson$93
};

function application$1(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("prerequisite", fromJson$6, json)
        ];
}

function use$1(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("prerequisite", fromJson$6, json)
        ];
}

function partial_arg_000$3(param) {
  return Json_decode.map((function (param) {
                return /* True */0;
              }), (function (param) {
                return $$const("true", param);
              }), param);
}

var partial_arg_001$3 = /* :: */[
  (function (param) {
      return Json_decode.map((function (param) {
                    return /* False */1;
                  }), (function (param) {
                    return $$const("false", param);
                  }), param);
    }),
  /* :: */[
    (function (param) {
        return Json_decode.map((function (param) {
                      return /* Maybe */2;
                    }), (function (param) {
                      return $$const("maybe", param);
                    }), param);
      }),
    /* [] */0
  ]
];

var partial_arg$3 = /* :: */[
  partial_arg_000$3,
  partial_arg_001$3
];

function enc(param) {
  return Json_decode.oneOf(partial_arg$3, param);
}

function univ$26(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          applications: Json_decode.field("applications", (function (param) {
                  return Json_decode.list(application$1, param);
                }), json),
          uses: Json_decode.field("uses", (function (param) {
                  return Json_decode.list(use$1, param);
                }), json),
          check: /* tuple */[
            Json_decode.field("check1", Json_decode.$$int, json),
            Json_decode.field("check2", Json_decode.$$int, json),
            Json_decode.field("check3", Json_decode.$$int, json)
          ],
          ic: Json_decode.field("ic", fromJson$13, json),
          enc: Json_decode.field("enc", enc, json),
          gr: Json_decode.field("gr", Json_decode.$$int, json)
        };
}

function fromJson$94(yaml) {
  return Json_decode.list(univ$26, yaml.skillsUniv);
}

var SkillsUniv = {
  fromJson: fromJson$94
};

function l10n$49(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$95(yaml) {
  return Json_decode.list(l10n$49, yaml.socialStatusesL10n);
}

var SocialStatusesL10n = {
  fromJson: fromJson$95
};

function l10n$50(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$96(yaml) {
  return Json_decode.list(l10n$50, yaml.specialAbilitiesL10n);
}

var SpecialAbilitiesL10n = {
  fromJson: fromJson$96
};

function univ$27(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$97(yaml) {
  return Json_decode.list(univ$27, yaml.specialAbilitiesUniv);
}

var SpecialAbilitiesUniv = {
  fromJson: fromJson$97
};

function l10n$51(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$98(yaml) {
  return Json_decode.list(l10n$51, yaml.specialAbilityGroupsL10n);
}

var SpecialAbilityGroupsL10n = {
  fromJson: fromJson$98
};

function l10n$52(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$99(yaml) {
  return Json_decode.list(l10n$52, yaml.spellEnhancementsL10n);
}

var SpellEnhancementsL10n = {
  fromJson: fromJson$99
};

function univ$28(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json)
        };
}

function fromJson$100(yaml) {
  return Json_decode.list(univ$28, yaml.spellEnhancementsUniv);
}

var SpellEnhancementsUniv = {
  fromJson: fromJson$100
};

function l10n$53(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$101(yaml) {
  return Json_decode.list(l10n$53, yaml.spellGroupsL10n);
}

var SpellGroupsL10n = {
  fromJson: fromJson$101
};

function l10n$54(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          effect: Json_decode.field("effect", Json_decode.string, json),
          castingTime: Json_decode.field("castingTime", Json_decode.string, json),
          castingTimeShort: Json_decode.field("castingTimeShort", Json_decode.string, json),
          aeCost: Json_decode.field("aeCost", Json_decode.string, json),
          aeCostShort: Json_decode.field("aeCostShort", Json_decode.string, json),
          range: Json_decode.field("range", Json_decode.string, json),
          rangeShort: Json_decode.field("rangeShort", Json_decode.string, json),
          duration: Json_decode.field("duration", Json_decode.string, json),
          durationShort: Json_decode.field("durationShort", Json_decode.string, json),
          target: Json_decode.field("target", Json_decode.string, json),
          src: Json_decode.field("src", fromJson, json),
          errata: Json_decode.field("errata", fromJson$1, json)
        };
}

function fromJson$102(yaml) {
  return Json_decode.list(l10n$54, yaml.spellsL10n);
}

var SpellsL10n = {
  fromJson: fromJson$102
};

function partial_arg_000$4(param) {
  return Json_decode.map((function (param) {
                return /* SPI */0;
              }), (function (param) {
                return $$const("SPI", param);
              }), param);
}

var partial_arg_001$4 = /* :: */[
  (function (param) {
      return Json_decode.map((function (param) {
                    return /* DOUBLE_SPI */1;
                  }), (function (param) {
                    return $$const("SPI/2", param);
                  }), param);
    }),
  /* :: */[
    (function (param) {
        return Json_decode.map((function (param) {
                      return /* TOU */2;
                    }), (function (param) {
                      return $$const("TOU", param);
                    }), param);
      }),
    /* :: */[
      (function (param) {
          return Json_decode.map((function (param) {
                        return /* MAX_SPI_TOU */3;
                      }), (function (param) {
                        return $$const("SPI/TOU", param);
                      }), param);
        }),
      /* [] */0
    ]
  ]
];

var partial_arg$4 = /* :: */[
  partial_arg_000$4,
  partial_arg_001$4
];

function checkMod(param) {
  return Json_decode.oneOf(partial_arg$4, param);
}

function univ$29(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          check: /* tuple */[
            Json_decode.field("check1", Json_decode.$$int, json),
            Json_decode.field("check2", Json_decode.$$int, json),
            Json_decode.field("check3", Json_decode.$$int, json)
          ],
          checkMod: Json_decode.field("checkMod", (function (param) {
                  return maybe(checkMod, param);
                }), json),
          ic: Json_decode.field("ic", fromJson$13, json),
          traditions: Json_decode.field("traditions", (function (param) {
                  return Json_decode.list(Json_decode.$$int, param);
                }), json),
          property: Json_decode.field("property", Json_decode.$$int, json),
          castingTimeNoMod: Json_decode.field("castingTimeNoMod", Json_decode.bool, json),
          aeCostNoMod: Json_decode.field("aeCostNoMod", Json_decode.bool, json),
          rangeNoMod: Json_decode.field("rangeNoMod", Json_decode.bool, json),
          durationNoMod: Json_decode.field("durationNoMod", Json_decode.bool, json),
          activatablePrerequisites: Maybe$OptolithClient.fromMaybe(/* [] */0, Json_decode.field("activatablePrerequisites", (function (param) {
                      return maybe((function (param) {
                                    return Json_decode.list(fromJson$6, param);
                                  }), param);
                    }), json)),
          increasablePrerequisites: Maybe$OptolithClient.fromMaybe(/* [] */0, Json_decode.field("increasablePrerequisites", (function (param) {
                      return maybe((function (param) {
                                    return Json_decode.list(fromJson$10, param);
                                  }), param);
                    }), json)),
          gr: Json_decode.field("gr", Json_decode.$$int, json)
        };
}

function fromJson$103(yaml) {
  return Json_decode.list(univ$29, yaml.spellsUniv);
}

var SpellsUniv = {
  checkMod: checkMod,
  fromJson: fromJson$103
};

function l10n$55(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          description: Json_decode.field("description", Json_decode.string, json),
          src: Json_decode.list(l10n, json),
          errata: fromJson$1(json)
        };
}

function fromJson$104(yaml) {
  return Json_decode.list(l10n$55, yaml.statesL10n);
}

var StatesL10n = {
  fromJson: fromJson$104
};

function l10n$56(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$105(yaml) {
  return Json_decode.list(l10n$56, yaml.subjectsL10n);
}

var SubjectsL10n = {
  fromJson: fromJson$105
};

function l10n$57(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.string, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$106(param) {
  return Json_decode.list(l10n$57, param);
}

var SupportedLanguagesL10n = {
  fromJson: fromJson$106
};

function l10n$58(json) {
  return /* tuple */[
          Json_decode.field("id", Json_decode.$$int, json),
          Json_decode.field("name", Json_decode.string, json)
        ];
}

function fromJson$107(yaml) {
  return Json_decode.list(l10n$58, yaml.tribesL10n);
}

var TribesL10n = {
  fromJson: fromJson$107
};

function l10n$59(json) {
  return {
          macosmenubar_aboutapp: Json_decode.field("macosmenubar.aboutapp", Json_decode.string, json),
          macosmenubar_preferences: Json_decode.field("macosmenubar.preferences", Json_decode.string, json),
          macosmenubar_quit: Json_decode.field("macosmenubar.quit", Json_decode.string, json),
          macosmenubar_edit: Json_decode.field("macosmenubar.edit", Json_decode.string, json),
          macosmenubar_view: Json_decode.field("macosmenubar.view", Json_decode.string, json),
          initialization_loadtableserror: Json_decode.field("initialization.loadtableserror", Json_decode.string, json),
          header_tabs_heroes: Json_decode.field("header.tabs.heroes", Json_decode.string, json),
          header_tabs_groups: Json_decode.field("header.tabs.groups", Json_decode.string, json),
          header_tabs_wiki: Json_decode.field("header.tabs.wiki", Json_decode.string, json),
          header_tabs_faq: Json_decode.field("header.tabs.faq", Json_decode.string, json),
          header_tabs_about: Json_decode.field("header.tabs.about", Json_decode.string, json),
          header_tabs_imprint: Json_decode.field("header.tabs.imprint", Json_decode.string, json),
          header_tabs_thirdpartylicenses: Json_decode.field("header.tabs.thirdpartylicenses", Json_decode.string, json),
          header_tabs_lastchanges: Json_decode.field("header.tabs.lastchanges", Json_decode.string, json),
          header_tabs_profile: Json_decode.field("header.tabs.profile", Json_decode.string, json),
          header_tabs_overview: Json_decode.field("header.tabs.overview", Json_decode.string, json),
          header_tabs_personaldata: Json_decode.field("header.tabs.personaldata", Json_decode.string, json),
          header_tabs_charactersheet: Json_decode.field("header.tabs.charactersheet", Json_decode.string, json),
          header_tabs_pact: Json_decode.field("header.tabs.pact", Json_decode.string, json),
          header_tabs_rules: Json_decode.field("header.tabs.rules", Json_decode.string, json),
          header_tabs_racecultureandprofession: Json_decode.field("header.tabs.racecultureandprofession", Json_decode.string, json),
          header_tabs_race: Json_decode.field("header.tabs.race", Json_decode.string, json),
          header_tabs_culture: Json_decode.field("header.tabs.culture", Json_decode.string, json),
          header_tabs_profession: Json_decode.field("header.tabs.profession", Json_decode.string, json),
          header_tabs_attributes: Json_decode.field("header.tabs.attributes", Json_decode.string, json),
          header_tabs_advantagesanddisadvantages: Json_decode.field("header.tabs.advantagesanddisadvantages", Json_decode.string, json),
          header_tabs_advantages: Json_decode.field("header.tabs.advantages", Json_decode.string, json),
          header_tabs_disadvantages: Json_decode.field("header.tabs.disadvantages", Json_decode.string, json),
          header_tabs_abilities: Json_decode.field("header.tabs.abilities", Json_decode.string, json),
          header_tabs_skills: Json_decode.field("header.tabs.skills", Json_decode.string, json),
          header_tabs_combattechniques: Json_decode.field("header.tabs.combattechniques", Json_decode.string, json),
          header_tabs_specialabilities: Json_decode.field("header.tabs.specialabilities", Json_decode.string, json),
          header_tabs_spells: Json_decode.field("header.tabs.spells", Json_decode.string, json),
          header_tabs_liturgicalchants: Json_decode.field("header.tabs.liturgicalchants", Json_decode.string, json),
          header_tabs_belongings: Json_decode.field("header.tabs.belongings", Json_decode.string, json),
          header_tabs_equipment: Json_decode.field("header.tabs.equipment", Json_decode.string, json),
          header_tabs_hitzonearmor: Json_decode.field("header.tabs.hitzonearmor", Json_decode.string, json),
          header_tabs_pets: Json_decode.field("header.tabs.pets", Json_decode.string, json),
          header_apleft: Json_decode.field("header.apleft", Json_decode.string, json),
          header_savebtn: Json_decode.field("header.savebtn", Json_decode.string, json),
          header_aptooltip_title: Json_decode.field("header.aptooltip.title", Json_decode.string, json),
          header_aptooltip_total: Json_decode.field("header.aptooltip.total", Json_decode.string, json),
          header_aptooltip_spent: Json_decode.field("header.aptooltip.spent", Json_decode.string, json),
          header_aptooltip_spentonadvantages: Json_decode.field("header.aptooltip.spentonadvantages", Json_decode.string, json),
          header_aptooltip_spentonmagicadvantages: Json_decode.field("header.aptooltip.spentonmagicadvantages", Json_decode.string, json),
          header_aptooltip_spentonblessedadvantages: Json_decode.field("header.aptooltip.spentonblessedadvantages", Json_decode.string, json),
          header_aptooltip_spentondisadvantages: Json_decode.field("header.aptooltip.spentondisadvantages", Json_decode.string, json),
          header_aptooltip_spentonmagicdisadvantages: Json_decode.field("header.aptooltip.spentonmagicdisadvantages", Json_decode.string, json),
          header_aptooltip_spentonblesseddisadvantages: Json_decode.field("header.aptooltip.spentonblesseddisadvantages", Json_decode.string, json),
          header_aptooltip_spentonrace: Json_decode.field("header.aptooltip.spentonrace", Json_decode.string, json),
          header_aptooltip_spentonprofession: Json_decode.field("header.aptooltip.spentonprofession", Json_decode.string, json),
          header_aptooltip_spentonattributes: Json_decode.field("header.aptooltip.spentonattributes", Json_decode.string, json),
          header_aptooltip_spentonskills: Json_decode.field("header.aptooltip.spentonskills", Json_decode.string, json),
          header_aptooltip_spentoncombattechniques: Json_decode.field("header.aptooltip.spentoncombattechniques", Json_decode.string, json),
          header_aptooltip_spentonspells: Json_decode.field("header.aptooltip.spentonspells", Json_decode.string, json),
          header_aptooltip_spentoncantrips: Json_decode.field("header.aptooltip.spentoncantrips", Json_decode.string, json),
          header_aptooltip_spentonliturgicalchants: Json_decode.field("header.aptooltip.spentonliturgicalchants", Json_decode.string, json),
          header_aptooltip_spentonblessings: Json_decode.field("header.aptooltip.spentonblessings", Json_decode.string, json),
          header_aptooltip_spentonspecialabilities: Json_decode.field("header.aptooltip.spentonspecialabilities", Json_decode.string, json),
          header_aptooltip_spentonenergies: Json_decode.field("header.aptooltip.spentonenergies", Json_decode.string, json),
          header_dialogs_herosaved: Json_decode.field("header.dialogs.herosaved", Json_decode.string, json),
          header_dialogs_allsaved: Json_decode.field("header.dialogs.allsaved", Json_decode.string, json),
          header_dialogs_everythingelsesaved: Json_decode.field("header.dialogs.everythingelsesaved", Json_decode.string, json),
          header_dialogs_saveconfigerror_title: Json_decode.field("header.dialogs.saveconfigerror.title", Json_decode.string, json),
          header_dialogs_saveconfigerror_message: Json_decode.field("header.dialogs.saveconfigerror.message", Json_decode.string, json),
          header_dialogs_saveheroeserror_title: Json_decode.field("header.dialogs.saveheroeserror.title", Json_decode.string, json),
          header_dialogs_saveheroeserror_message: Json_decode.field("header.dialogs.saveheroeserror.message", Json_decode.string, json),
          general_weightvalue: Json_decode.field("general.weightvalue", Json_decode.string, json),
          general_pricevalue: Json_decode.field("general.pricevalue", Json_decode.string, json),
          general_lengthvalue: Json_decode.field("general.lengthvalue", Json_decode.string, json),
          general_dice: Json_decode.field("general.dice", Json_decode.string, json),
          general_none: Json_decode.field("general.none", Json_decode.string, json),
          general_or: Json_decode.field("general.or", Json_decode.string, json),
          general_and: Json_decode.field("general.and", Json_decode.string, json),
          general_error: Json_decode.field("general.error", Json_decode.string, json),
          general_errorcode: Json_decode.field("general.errorcode", Json_decode.string, json),
          general_emptylistplaceholder: Json_decode.field("general.emptylistplaceholder", Json_decode.string, json),
          general_emptylistnoresultsplaceholder: Json_decode.field("general.emptylistnoresultsplaceholder", Json_decode.string, json),
          general_apvalue: Json_decode.field("general.apvalue", Json_decode.string, json),
          general_apvalue_short: Json_decode.field("general.apvalue.short", Json_decode.string, json),
          general_withapvalue: Json_decode.field("general.withapvalue", Json_decode.string, json),
          general_filters_searchfield_placeholder: Json_decode.field("general.filters.searchfield.placeholder", Json_decode.string, json),
          general_filters_sort_alphabetically: Json_decode.field("general.filters.sort.alphabetically", Json_decode.string, json),
          general_filters_sort_bydatemodified: Json_decode.field("general.filters.sort.bydatemodified", Json_decode.string, json),
          general_filters_sort_bygroup: Json_decode.field("general.filters.sort.bygroup", Json_decode.string, json),
          general_filters_sort_byimprovementcost: Json_decode.field("general.filters.sort.byimprovementcost", Json_decode.string, json),
          general_filters_sort_byproperty: Json_decode.field("general.filters.sort.byproperty", Json_decode.string, json),
          general_filters_sort_bylocation: Json_decode.field("general.filters.sort.bylocation", Json_decode.string, json),
          general_filters_sort_bycost: Json_decode.field("general.filters.sort.bycost", Json_decode.string, json),
          general_filters_sort_byweight: Json_decode.field("general.filters.sort.byweight", Json_decode.string, json),
          general_filters_showactivatedentries: Json_decode.field("general.filters.showactivatedentries", Json_decode.string, json),
          general_dialogs_savebtn: Json_decode.field("general.dialogs.savebtn", Json_decode.string, json),
          general_dialogs_donebtn: Json_decode.field("general.dialogs.donebtn", Json_decode.string, json),
          general_dialogs_deletebtn: Json_decode.field("general.dialogs.deletebtn", Json_decode.string, json),
          general_dialogs_yesbtn: Json_decode.field("general.dialogs.yesbtn", Json_decode.string, json),
          general_dialogs_nobtn: Json_decode.field("general.dialogs.nobtn", Json_decode.string, json),
          general_dialogs_okbtn: Json_decode.field("general.dialogs.okbtn", Json_decode.string, json),
          general_dialogs_cancelbtn: Json_decode.field("general.dialogs.cancelbtn", Json_decode.string, json),
          general_dialogs_copybtn: Json_decode.field("general.dialogs.copybtn", Json_decode.string, json),
          general_dialogs_createbtn: Json_decode.field("general.dialogs.createbtn", Json_decode.string, json),
          general_dialogs_applybtn: Json_decode.field("general.dialogs.applybtn", Json_decode.string, json),
          general_dialogs_addbtn: Json_decode.field("general.dialogs.addbtn", Json_decode.string, json),
          general_dialogs_notenoughap_title: Json_decode.field("general.dialogs.notenoughap.title", Json_decode.string, json),
          general_dialogs_notenoughap_message: Json_decode.field("general.dialogs.notenoughap.message", Json_decode.string, json),
          general_dialogs_reachedaplimit_title: Json_decode.field("general.dialogs.reachedaplimit.title", Json_decode.string, json),
          general_dialogs_reachedaplimit_message: Json_decode.field("general.dialogs.reachedaplimit.message", Json_decode.string, json),
          general_dialogs_reachedaplimit_advantages: Json_decode.field("general.dialogs.reachedaplimit.advantages", Json_decode.string, json),
          general_dialogs_reachedaplimit_magicaladvantages: Json_decode.field("general.dialogs.reachedaplimit.magicaladvantages", Json_decode.string, json),
          general_dialogs_reachedaplimit_blessedadvantages: Json_decode.field("general.dialogs.reachedaplimit.blessedadvantages", Json_decode.string, json),
          general_dialogs_reachedaplimit_disadvantages: Json_decode.field("general.dialogs.reachedaplimit.disadvantages", Json_decode.string, json),
          general_dialogs_reachedaplimit_magicaldisadvantages: Json_decode.field("general.dialogs.reachedaplimit.magicaldisadvantages", Json_decode.string, json),
          general_dialogs_reachedaplimit_blesseddisadvantages: Json_decode.field("general.dialogs.reachedaplimit.blesseddisadvantages", Json_decode.string, json),
          settings_title: Json_decode.field("settings.title", Json_decode.string, json),
          settings_language: Json_decode.field("settings.language", Json_decode.string, json),
          settings_systemlanguage: Json_decode.field("settings.systemlanguage", Json_decode.string, json),
          settings_languagehint: Json_decode.field("settings.languagehint", Json_decode.string, json),
          settings_theme: Json_decode.field("settings.theme", Json_decode.string, json),
          settings_theme_dark: Json_decode.field("settings.theme.dark", Json_decode.string, json),
          settings_theme_light: Json_decode.field("settings.theme.light", Json_decode.string, json),
          settings_showanimations: Json_decode.field("settings.showanimations", Json_decode.string, json),
          settings_enableeditingheroaftercreationphase: Json_decode.field("settings.enableeditingheroaftercreationphase", Json_decode.string, json),
          settings_checkforupdatesbtn: Json_decode.field("settings.checkforupdatesbtn", Json_decode.string, json),
          settings_newversionavailable_title: Json_decode.field("settings.newversionavailable.title", Json_decode.string, json),
          settings_newversionavailable_message: Json_decode.field("settings.newversionavailable.message", Json_decode.string, json),
          settings_newversionavailable_messagewithsize: Json_decode.field("settings.newversionavailable.messagewithsize", Json_decode.string, json),
          settings_newversionavailable_updatebtn: Json_decode.field("settings.newversionavailable.updatebtn", Json_decode.string, json),
          settings_nonewversionavailable_title: Json_decode.field("settings.nonewversionavailable.title", Json_decode.string, json),
          settings_nonewversionavailable_message: Json_decode.field("settings.nonewversionavailable.message", Json_decode.string, json),
          settings_downloadingupdate_title: Json_decode.field("settings.downloadingupdate.title", Json_decode.string, json),
          heroes_filters_origin_allheroes: Json_decode.field("heroes.filters.origin.allheroes", Json_decode.string, json),
          heroes_filters_origin_ownheroes: Json_decode.field("heroes.filters.origin.ownheroes", Json_decode.string, json),
          heroes_filters_origin_sharedheroes: Json_decode.field("heroes.filters.origin.sharedheroes", Json_decode.string, json),
          heroes_importherobtn: Json_decode.field("heroes.importherobtn", Json_decode.string, json),
          heroes_createherobtn: Json_decode.field("heroes.createherobtn", Json_decode.string, json),
          heroes_exportheroasjsonbtn: Json_decode.field("heroes.exportheroasjsonbtn", Json_decode.string, json),
          heroes_duplicateherobtn: Json_decode.field("heroes.duplicateherobtn", Json_decode.string, json),
          heroes_deleteherobtn: Json_decode.field("heroes.deleteherobtn", Json_decode.string, json),
          heroes_openherobtn: Json_decode.field("heroes.openherobtn", Json_decode.string, json),
          heroes_saveherobtn: Json_decode.field("heroes.saveherobtn", Json_decode.string, json),
          heroes_unsavedhero_name: Json_decode.field("heroes.unsavedhero.name", Json_decode.string, json),
          heroes_list_adventurepoints: Json_decode.field("heroes.list.adventurepoints", Json_decode.string, json),
          heroes_dialogs_herosaved: Json_decode.field("heroes.dialogs.herosaved", Json_decode.string, json),
          heroes_dialogs_importheroerror_title: Json_decode.field("heroes.dialogs.importheroerror.title", Json_decode.string, json),
          heroes_dialogs_importheroerror_message: Json_decode.field("heroes.dialogs.importheroerror.message", Json_decode.string, json),
          heroes_dialogs_heroexportsavelocation_title: Json_decode.field("heroes.dialogs.heroexportsavelocation.title", Json_decode.string, json),
          heroes_dialogs_herojsonsaveerror_title: Json_decode.field("heroes.dialogs.herojsonsaveerror.title", Json_decode.string, json),
          heroes_dialogs_herojsonsaveerror_message: Json_decode.field("heroes.dialogs.herojsonsaveerror.message", Json_decode.string, json),
          heroes_dialogs_unsavedactions_title: Json_decode.field("heroes.dialogs.unsavedactions.title", Json_decode.string, json),
          heroes_dialogs_unsavedactions_message: Json_decode.field("heroes.dialogs.unsavedactions.message", Json_decode.string, json),
          heroes_dialogs_unsavedactions_quit: Json_decode.field("heroes.dialogs.unsavedactions.quit", Json_decode.string, json),
          heroes_dialogs_unsavedactions_saveandquit: Json_decode.field("heroes.dialogs.unsavedactions.saveandquit", Json_decode.string, json),
          heroes_dialogs_deletehero_title: Json_decode.field("heroes.dialogs.deletehero.title", Json_decode.string, json),
          heroes_dialogs_deletehero_message: Json_decode.field("heroes.dialogs.deletehero.message", Json_decode.string, json),
          heroes_dialogs_herocreation_title: Json_decode.field("heroes.dialogs.herocreation.title", Json_decode.string, json),
          heroes_dialogs_herocreation_nameofhero: Json_decode.field("heroes.dialogs.herocreation.nameofhero", Json_decode.string, json),
          heroes_dialogs_herocreation_sex_placeholder: Json_decode.field("heroes.dialogs.herocreation.sex.placeholder", Json_decode.string, json),
          heroes_dialogs_herocreation_sex_male: Json_decode.field("heroes.dialogs.herocreation.sex.male", Json_decode.string, json),
          heroes_dialogs_herocreation_sex_female: Json_decode.field("heroes.dialogs.herocreation.sex.female", Json_decode.string, json),
          heroes_dialogs_herocreation_experiencelevel_placeholder: Json_decode.field("heroes.dialogs.herocreation.experiencelevel.placeholder", Json_decode.string, json),
          heroes_dialogs_herocreation_startbtn: Json_decode.field("heroes.dialogs.herocreation.startbtn", Json_decode.string, json),
          wiki_chooseacategory: Json_decode.field("wiki.chooseacategory", Json_decode.string, json),
          wiki_chooseacategorytodisplayalist: Json_decode.field("wiki.chooseacategorytodisplayalist", Json_decode.string, json),
          wiki_filters_races: Json_decode.field("wiki.filters.races", Json_decode.string, json),
          wiki_filters_cultures: Json_decode.field("wiki.filters.cultures", Json_decode.string, json),
          wiki_filters_professions: Json_decode.field("wiki.filters.professions", Json_decode.string, json),
          wiki_filters_advantages: Json_decode.field("wiki.filters.advantages", Json_decode.string, json),
          wiki_filters_disadvantages: Json_decode.field("wiki.filters.disadvantages", Json_decode.string, json),
          wiki_filters_skills: Json_decode.field("wiki.filters.skills", Json_decode.string, json),
          wiki_filters_skills_all: Json_decode.field("wiki.filters.skills.all", Json_decode.string, json),
          wiki_filters_combattechniques: Json_decode.field("wiki.filters.combattechniques", Json_decode.string, json),
          wiki_filters_combattechniques_all: Json_decode.field("wiki.filters.combattechniques.all", Json_decode.string, json),
          wiki_filters_magic: Json_decode.field("wiki.filters.magic", Json_decode.string, json),
          wiki_filters_magic_all: Json_decode.field("wiki.filters.magic.all", Json_decode.string, json),
          wiki_filters_liturgicalchants: Json_decode.field("wiki.filters.liturgicalchants", Json_decode.string, json),
          wiki_filters_liturgicalchants_all: Json_decode.field("wiki.filters.liturgicalchants.all", Json_decode.string, json),
          wiki_filters_specialabilities: Json_decode.field("wiki.filters.specialabilities", Json_decode.string, json),
          wiki_filters_specialabilities_all: Json_decode.field("wiki.filters.specialabilities.all", Json_decode.string, json),
          wiki_filters_itemtemplates: Json_decode.field("wiki.filters.itemtemplates", Json_decode.string, json),
          wiki_filters_itemtemplates_all: Json_decode.field("wiki.filters.itemtemplates.all", Json_decode.string, json),
          imprint_title: Json_decode.field("imprint.title", Json_decode.string, json),
          profile_editprofessionnamebtn: Json_decode.field("profile.editprofessionnamebtn", Json_decode.string, json),
          profile_addadventurepointsbtn: Json_decode.field("profile.addadventurepointsbtn", Json_decode.string, json),
          profile_endherocreationbtn: Json_decode.field("profile.endherocreationbtn", Json_decode.string, json),
          profile_changeheroavatarbtn: Json_decode.field("profile.changeheroavatarbtn", Json_decode.string, json),
          profile_deleteavatarbtn: Json_decode.field("profile.deleteavatarbtn", Json_decode.string, json),
          profile_dialogs_changeheroavatar_title: Json_decode.field("profile.dialogs.changeheroavatar.title", Json_decode.string, json),
          profile_dialogs_changeheroavatar_selectfilebtn: Json_decode.field("profile.dialogs.changeheroavatar.selectfilebtn", Json_decode.string, json),
          profile_dialogs_changeheroavatar_imagefiletype: Json_decode.field("profile.dialogs.changeheroavatar.imagefiletype", Json_decode.string, json),
          profile_dialogs_changeheroavatar_invalidfilewarning: Json_decode.field("profile.dialogs.changeheroavatar.invalidfilewarning", Json_decode.string, json),
          profile_dialogs_addadventurepoints_title: Json_decode.field("profile.dialogs.addadventurepoints.title", Json_decode.string, json),
          profile_dialogs_addadventurepoints_label: Json_decode.field("profile.dialogs.addadventurepoints.label", Json_decode.string, json),
          profile_advantages: Json_decode.field("profile.advantages", Json_decode.string, json),
          profile_disadvantages: Json_decode.field("profile.disadvantages", Json_decode.string, json),
          personaldata_title: Json_decode.field("personaldata.title", Json_decode.string, json),
          personaldata_sex_male: Json_decode.field("personaldata.sex.male", Json_decode.string, json),
          personaldata_sex_female: Json_decode.field("personaldata.sex.female", Json_decode.string, json),
          personaldata_family: Json_decode.field("personaldata.family", Json_decode.string, json),
          personaldata_placeofbirth: Json_decode.field("personaldata.placeofbirth", Json_decode.string, json),
          personaldata_dateofbirth: Json_decode.field("personaldata.dateofbirth", Json_decode.string, json),
          personaldata_age: Json_decode.field("personaldata.age", Json_decode.string, json),
          personaldata_haircolor: Json_decode.field("personaldata.haircolor", Json_decode.string, json),
          personaldata_eyecolor: Json_decode.field("personaldata.eyecolor", Json_decode.string, json),
          personaldata_size: Json_decode.field("personaldata.size", Json_decode.string, json),
          personaldata_weight: Json_decode.field("personaldata.weight", Json_decode.string, json),
          personaldata_rank: Json_decode.field("personaldata.rank", Json_decode.string, json),
          personaldata_socialstatus: Json_decode.field("personaldata.socialstatus", Json_decode.string, json),
          personaldata_characteristics: Json_decode.field("personaldata.characteristics", Json_decode.string, json),
          personaldata_otherinfo: Json_decode.field("personaldata.otherinfo", Json_decode.string, json),
          personaldata_cultureareaknowledge: Json_decode.field("personaldata.cultureareaknowledge", Json_decode.string, json),
          sheets_printtopdfbtn: Json_decode.field("sheets.printtopdfbtn", Json_decode.string, json),
          sheets_dialogs_pdfexportsavelocation_title: Json_decode.field("sheets.dialogs.pdfexportsavelocation.title", Json_decode.string, json),
          sheets_dialogs_pdfsaved: Json_decode.field("sheets.dialogs.pdfsaved", Json_decode.string, json),
          sheets_dialogs_pdfsaveerror_title: Json_decode.field("sheets.dialogs.pdfsaveerror.title", Json_decode.string, json),
          sheets_dialogs_pdfsaveerror_message: Json_decode.field("sheets.dialogs.pdfsaveerror.message", Json_decode.string, json),
          sheets_dialogs_pdfcreationerror_title: Json_decode.field("sheets.dialogs.pdfcreationerror.title", Json_decode.string, json),
          sheets_dialogs_pdfcreationerror_message: Json_decode.field("sheets.dialogs.pdfcreationerror.message", Json_decode.string, json),
          sheets_showattributevalues: Json_decode.field("sheets.showattributevalues", Json_decode.string, json),
          sheets_charactersheet: Json_decode.field("sheets.charactersheet", Json_decode.string, json),
          sheets_attributemodifiers_title: Json_decode.field("sheets.attributemodifiers.title", Json_decode.string, json),
          sheets_mainsheet_title: Json_decode.field("sheets.mainsheet.title", Json_decode.string, json),
          sheets_mainsheet_name: Json_decode.field("sheets.mainsheet.name", Json_decode.string, json),
          sheets_mainsheet_family: Json_decode.field("sheets.mainsheet.family", Json_decode.string, json),
          sheets_mainsheet_placeofbirth: Json_decode.field("sheets.mainsheet.placeofbirth", Json_decode.string, json),
          sheets_mainsheet_dateofbirth: Json_decode.field("sheets.mainsheet.dateofbirth", Json_decode.string, json),
          sheets_mainsheet_age: Json_decode.field("sheets.mainsheet.age", Json_decode.string, json),
          sheets_mainsheet_sex: Json_decode.field("sheets.mainsheet.sex", Json_decode.string, json),
          sheets_mainsheet_race: Json_decode.field("sheets.mainsheet.race", Json_decode.string, json),
          sheets_mainsheet_size: Json_decode.field("sheets.mainsheet.size", Json_decode.string, json),
          sheets_mainsheet_weight: Json_decode.field("sheets.mainsheet.weight", Json_decode.string, json),
          sheets_mainsheet_haircolor: Json_decode.field("sheets.mainsheet.haircolor", Json_decode.string, json),
          sheets_mainsheet_eyecolor: Json_decode.field("sheets.mainsheet.eyecolor", Json_decode.string, json),
          sheets_mainsheet_culture: Json_decode.field("sheets.mainsheet.culture", Json_decode.string, json),
          sheets_mainsheet_socialstatus: Json_decode.field("sheets.mainsheet.socialstatus", Json_decode.string, json),
          sheets_mainsheet_profession: Json_decode.field("sheets.mainsheet.profession", Json_decode.string, json),
          sheets_mainsheet_rank: Json_decode.field("sheets.mainsheet.rank", Json_decode.string, json),
          sheets_mainsheet_characteristics: Json_decode.field("sheets.mainsheet.characteristics", Json_decode.string, json),
          sheets_mainsheet_otherinfo: Json_decode.field("sheets.mainsheet.otherinfo", Json_decode.string, json),
          sheets_mainsheet_experiencelevellabel: Json_decode.field("sheets.mainsheet.experiencelevellabel", Json_decode.string, json),
          sheets_mainsheet_totalaplabel: Json_decode.field("sheets.mainsheet.totalaplabel", Json_decode.string, json),
          sheets_mainsheet_apcollectedlabel: Json_decode.field("sheets.mainsheet.apcollectedlabel", Json_decode.string, json),
          sheets_mainsheet_apspentlabel: Json_decode.field("sheets.mainsheet.apspentlabel", Json_decode.string, json),
          sheets_mainsheet_avatarlabel: Json_decode.field("sheets.mainsheet.avatarlabel", Json_decode.string, json),
          sheets_mainsheet_advantages: Json_decode.field("sheets.mainsheet.advantages", Json_decode.string, json),
          sheets_mainsheet_disadvantages: Json_decode.field("sheets.mainsheet.disadvantages", Json_decode.string, json),
          sheets_mainsheet_generalspecialabilites: Json_decode.field("sheets.mainsheet.generalspecialabilites", Json_decode.string, json),
          sheets_mainsheet_fatepoints: Json_decode.field("sheets.mainsheet.fatepoints", Json_decode.string, json),
          sheets_mainsheet_derivedcharacteristics_labels_value: Json_decode.field("sheets.mainsheet.derivedcharacteristics.labels.value", Json_decode.string, json),
          sheets_mainsheet_derivedcharacteristics_labels_bonuspenalty: Json_decode.field("sheets.mainsheet.derivedcharacteristics.labels.bonuspenalty", Json_decode.string, json),
          sheets_mainsheet_derivedcharacteristics_labels_bonus: Json_decode.field("sheets.mainsheet.derivedcharacteristics.labels.bonus", Json_decode.string, json),
          sheets_mainsheet_derivedcharacteristics_labels_bought: Json_decode.field("sheets.mainsheet.derivedcharacteristics.labels.bought", Json_decode.string, json),
          sheets_mainsheet_derivedcharacteristics_labels_max: Json_decode.field("sheets.mainsheet.derivedcharacteristics.labels.max", Json_decode.string, json),
          sheets_mainsheet_derivedcharacteristics_labels_current: Json_decode.field("sheets.mainsheet.derivedcharacteristics.labels.current", Json_decode.string, json),
          sheets_mainsheet_derivedcharacteristics_labels_basestat: Json_decode.field("sheets.mainsheet.derivedcharacteristics.labels.basestat", Json_decode.string, json),
          sheets_mainsheet_derivedcharacteristics_labels_permanentlylostboughtback: Json_decode.field("sheets.mainsheet.derivedcharacteristics.labels.permanentlylostboughtback", Json_decode.string, json),
          sheets_gamestatssheet_title: Json_decode.field("sheets.gamestatssheet.title", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_title: Json_decode.field("sheets.gamestatssheet.skillstable.title", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_labels_skill: Json_decode.field("sheets.gamestatssheet.skillstable.labels.skill", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_labels_check: Json_decode.field("sheets.gamestatssheet.skillstable.labels.check", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_labels_encumbrance: Json_decode.field("sheets.gamestatssheet.skillstable.labels.encumbrance", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_labels_improvementcost: Json_decode.field("sheets.gamestatssheet.skillstable.labels.improvementcost", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_labels_skillrating: Json_decode.field("sheets.gamestatssheet.skillstable.labels.skillrating", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_labels_routinechecks: Json_decode.field("sheets.gamestatssheet.skillstable.labels.routinechecks", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_labels_notes: Json_decode.field("sheets.gamestatssheet.skillstable.labels.notes", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_encumbrance_yes: Json_decode.field("sheets.gamestatssheet.skillstable.encumbrance.yes", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_encumbrance_no: Json_decode.field("sheets.gamestatssheet.skillstable.encumbrance.no", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_encumbrance_maybe: Json_decode.field("sheets.gamestatssheet.skillstable.encumbrance.maybe", Json_decode.string, json),
          sheets_gamestatssheet_skillstable_groups_pages: Json_decode.field("sheets.gamestatssheet.skillstable.groups.pages", Json_decode.string, json),
          sheets_gamestatssheet_languages_title: Json_decode.field("sheets.gamestatssheet.languages.title", Json_decode.string, json),
          sheets_gamestatssheet_languages_nativetongue: Json_decode.field("sheets.gamestatssheet.languages.nativetongue", Json_decode.string, json),
          sheets_gamestatssheet_knownscripts_title: Json_decode.field("sheets.gamestatssheet.knownscripts.title", Json_decode.string, json),
          sheets_gamestatssheet_routinechecks_title: Json_decode.field("sheets.gamestatssheet.routinechecks.title", Json_decode.string, json),
          sheets_gamestatssheet_routinechecks_textRow1: Json_decode.field("sheets.gamestatssheet.routinechecks.textRow1", Json_decode.string, json),
          sheets_gamestatssheet_routinechecks_textRow2: Json_decode.field("sheets.gamestatssheet.routinechecks.textRow2", Json_decode.string, json),
          sheets_gamestatssheet_routinechecks_textRow3: Json_decode.field("sheets.gamestatssheet.routinechecks.textRow3", Json_decode.string, json),
          sheets_gamestatssheet_routinechecks_textRow4: Json_decode.field("sheets.gamestatssheet.routinechecks.textRow4", Json_decode.string, json),
          sheets_gamestatssheet_routinechecks_labels_checkmod: Json_decode.field("sheets.gamestatssheet.routinechecks.labels.checkmod", Json_decode.string, json),
          sheets_gamestatssheet_routinechecks_labels_neededsr: Json_decode.field("sheets.gamestatssheet.routinechecks.labels.neededsr", Json_decode.string, json),
          sheets_gamestatssheet_routinechecks_from3on: Json_decode.field("sheets.gamestatssheet.routinechecks.from3on", Json_decode.string, json),
          sheets_gamestatssheet_qualitylevels_title: Json_decode.field("sheets.gamestatssheet.qualitylevels.title", Json_decode.string, json),
          sheets_gamestatssheet_qualitylevels_labels_skillpoints: Json_decode.field("sheets.gamestatssheet.qualitylevels.labels.skillpoints", Json_decode.string, json),
          sheets_gamestatssheet_qualitylevels_labels_qualitylevel: Json_decode.field("sheets.gamestatssheet.qualitylevels.labels.qualitylevel", Json_decode.string, json),
          sheets_combatsheet_title: Json_decode.field("sheets.combatsheet.title", Json_decode.string, json),
          sheets_combatsheet_combattechniquestable_title: Json_decode.field("sheets.combatsheet.combattechniquestable.title", Json_decode.string, json),
          sheets_combatsheet_combattechniquestable_labels_combattechnique: Json_decode.field("sheets.combatsheet.combattechniquestable.labels.combattechnique", Json_decode.string, json),
          sheets_combatsheet_combattechniquestable_labels_primaryattribute: Json_decode.field("sheets.combatsheet.combattechniquestable.labels.primaryattribute", Json_decode.string, json),
          sheets_combatsheet_combattechniquestable_labels_improvementcost: Json_decode.field("sheets.combatsheet.combattechniquestable.labels.improvementcost", Json_decode.string, json),
          sheets_combatsheet_combattechniquestable_labels_combattechniquerating: Json_decode.field("sheets.combatsheet.combattechniquestable.labels.combattechniquerating", Json_decode.string, json),
          sheets_combatsheet_combattechniquestable_labels_attackrangecombat: Json_decode.field("sheets.combatsheet.combattechniquestable.labels.attackrangecombat", Json_decode.string, json),
          sheets_combatsheet_combattechniquestable_labels_parry: Json_decode.field("sheets.combatsheet.combattechniquestable.labels.parry", Json_decode.string, json),
          sheets_combatsheet_lifepoints_title: Json_decode.field("sheets.combatsheet.lifepoints.title", Json_decode.string, json),
          sheets_combatsheet_lifepoints_max: Json_decode.field("sheets.combatsheet.lifepoints.max", Json_decode.string, json),
          sheets_combatsheet_lifepoints_current: Json_decode.field("sheets.combatsheet.lifepoints.current", Json_decode.string, json),
          sheets_combatsheet_lifepoints_pain1: Json_decode.field("sheets.combatsheet.lifepoints.pain1", Json_decode.string, json),
          sheets_combatsheet_lifepoints_pain2: Json_decode.field("sheets.combatsheet.lifepoints.pain2", Json_decode.string, json),
          sheets_combatsheet_lifepoints_pain3: Json_decode.field("sheets.combatsheet.lifepoints.pain3", Json_decode.string, json),
          sheets_combatsheet_lifepoints_pain4: Json_decode.field("sheets.combatsheet.lifepoints.pain4", Json_decode.string, json),
          sheets_combatsheet_lifepoints_dying: Json_decode.field("sheets.combatsheet.lifepoints.dying", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons: Json_decode.field("sheets.combatsheet.closecombatweapons", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_weapon: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.weapon", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_combattechnique: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.combattechnique", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_damagebonus: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.damagebonus", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_damagepoints: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.damagepoints", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_attackparrymodifier: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.attackparrymodifier", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_reach: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.reach", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_breakingpointrating: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.breakingpointrating", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_damaged: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.damaged", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_attack: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.attack", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_parry: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.parry", Json_decode.string, json),
          sheets_combatsheet_closecombatweapons_labels_weight: Json_decode.field("sheets.combatsheet.closecombatweapons.labels.weight", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons: Json_decode.field("sheets.combatsheet.rangedcombatweapons", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_weapon: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.weapon", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_combattechnique: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.combattechnique", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_reloadtime: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.reloadtime", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_damagepoints: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.damagepoints", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_ammunition: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.ammunition", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_rangebrackets: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.rangebrackets", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_breakingpointrating: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.breakingpointrating", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_damaged: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.damaged", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_rangedcombat: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.rangedcombat", Json_decode.string, json),
          sheets_combatsheet_rangedcombatweapons_labels_weight: Json_decode.field("sheets.combatsheet.rangedcombatweapons.labels.weight", Json_decode.string, json),
          sheets_combatsheet_armors_title: Json_decode.field("sheets.combatsheet.armors.title", Json_decode.string, json),
          sheets_combatsheet_armors_labels_armor: Json_decode.field("sheets.combatsheet.armors.labels.armor", Json_decode.string, json),
          sheets_combatsheet_armors_labels_sturdinessrating: Json_decode.field("sheets.combatsheet.armors.labels.sturdinessrating", Json_decode.string, json),
          sheets_combatsheet_armors_labels_wear: Json_decode.field("sheets.combatsheet.armors.labels.wear", Json_decode.string, json),
          sheets_combatsheet_armors_labels_protection: Json_decode.field("sheets.combatsheet.armors.labels.protection", Json_decode.string, json),
          sheets_combatsheet_armors_labels_encumbrance: Json_decode.field("sheets.combatsheet.armors.labels.encumbrance", Json_decode.string, json),
          sheets_combatsheet_armors_labels_movementinitiative: Json_decode.field("sheets.combatsheet.armors.labels.movementinitiative", Json_decode.string, json),
          sheets_combatsheet_armors_labels_carriedwhereexamples: Json_decode.field("sheets.combatsheet.armors.labels.carriedwhereexamples", Json_decode.string, json),
          sheets_combatsheet_armors_labels_head: Json_decode.field("sheets.combatsheet.armors.labels.head", Json_decode.string, json),
          sheets_combatsheet_armors_labels_torso: Json_decode.field("sheets.combatsheet.armors.labels.torso", Json_decode.string, json),
          sheets_combatsheet_armors_labels_leftarm: Json_decode.field("sheets.combatsheet.armors.labels.leftarm", Json_decode.string, json),
          sheets_combatsheet_armors_labels_rightarm: Json_decode.field("sheets.combatsheet.armors.labels.rightarm", Json_decode.string, json),
          sheets_combatsheet_armors_labels_leftleg: Json_decode.field("sheets.combatsheet.armors.labels.leftleg", Json_decode.string, json),
          sheets_combatsheet_armors_labels_rightleg: Json_decode.field("sheets.combatsheet.armors.labels.rightleg", Json_decode.string, json),
          sheets_combatsheet_armors_labels_weight: Json_decode.field("sheets.combatsheet.armors.labels.weight", Json_decode.string, json),
          sheets_combatsheet_shieldparryingweapon_title: Json_decode.field("sheets.combatsheet.shieldparryingweapon.title", Json_decode.string, json),
          sheets_combatsheet_shieldparryingweapon_labels_shieldparryingweapon: Json_decode.field("sheets.combatsheet.shieldparryingweapon.labels.shieldparryingweapon", Json_decode.string, json),
          sheets_combatsheet_shieldparryingweapon_labels_structurepoints: Json_decode.field("sheets.combatsheet.shieldparryingweapon.labels.structurepoints", Json_decode.string, json),
          sheets_combatsheet_shieldparryingweapon_labels_breakingpointrating: Json_decode.field("sheets.combatsheet.shieldparryingweapon.labels.breakingpointrating", Json_decode.string, json),
          sheets_combatsheet_shieldparryingweapon_labels_damaged: Json_decode.field("sheets.combatsheet.shieldparryingweapon.labels.damaged", Json_decode.string, json),
          sheets_combatsheet_shieldparryingweapon_labels_attackparrymodifier: Json_decode.field("sheets.combatsheet.shieldparryingweapon.labels.attackparrymodifier", Json_decode.string, json),
          sheets_combatsheet_shieldparryingweapon_labels_weight: Json_decode.field("sheets.combatsheet.shieldparryingweapon.labels.weight", Json_decode.string, json),
          sheets_combatsheet_actions: Json_decode.field("sheets.combatsheet.actions", Json_decode.string, json),
          sheets_combatsheet_combatspecialabilities: Json_decode.field("sheets.combatsheet.combatspecialabilities", Json_decode.string, json),
          sheets_combatsheet_conditions: Json_decode.field("sheets.combatsheet.conditions", Json_decode.string, json),
          sheets_combatsheet_states: Json_decode.field("sheets.combatsheet.states", Json_decode.string, json),
          sheets_belongingssheet_title: Json_decode.field("sheets.belongingssheet.title", Json_decode.string, json),
          sheets_belongingssheet_equipmenttable_title: Json_decode.field("sheets.belongingssheet.equipmenttable.title", Json_decode.string, json),
          sheets_belongingssheet_equipmenttable_labels_item: Json_decode.field("sheets.belongingssheet.equipmenttable.labels.item", Json_decode.string, json),
          sheets_belongingssheet_equipmenttable_labels_number: Json_decode.field("sheets.belongingssheet.equipmenttable.labels.number", Json_decode.string, json),
          sheets_belongingssheet_equipmenttable_labels_price: Json_decode.field("sheets.belongingssheet.equipmenttable.labels.price", Json_decode.string, json),
          sheets_belongingssheet_equipmenttable_labels_weight: Json_decode.field("sheets.belongingssheet.equipmenttable.labels.weight", Json_decode.string, json),
          sheets_belongingssheet_equipmenttable_labels_carriedwhere: Json_decode.field("sheets.belongingssheet.equipmenttable.labels.carriedwhere", Json_decode.string, json),
          sheets_belongingssheet_equipmenttable_labels_total: Json_decode.field("sheets.belongingssheet.equipmenttable.labels.total", Json_decode.string, json),
          sheets_belongingssheet_purse_title: Json_decode.field("sheets.belongingssheet.purse.title", Json_decode.string, json),
          sheets_belongingssheet_purse_ducats: Json_decode.field("sheets.belongingssheet.purse.ducats", Json_decode.string, json),
          sheets_belongingssheet_purse_silverthalers: Json_decode.field("sheets.belongingssheet.purse.silverthalers", Json_decode.string, json),
          sheets_belongingssheet_purse_halers: Json_decode.field("sheets.belongingssheet.purse.halers", Json_decode.string, json),
          sheets_belongingssheet_purse_kreutzers: Json_decode.field("sheets.belongingssheet.purse.kreutzers", Json_decode.string, json),
          sheets_belongingssheet_purse_gems: Json_decode.field("sheets.belongingssheet.purse.gems", Json_decode.string, json),
          sheets_belongingssheet_purse_jewelry: Json_decode.field("sheets.belongingssheet.purse.jewelry", Json_decode.string, json),
          sheets_belongingssheet_purse_other: Json_decode.field("sheets.belongingssheet.purse.other", Json_decode.string, json),
          sheets_belongingssheet_carryingcapacity_title: Json_decode.field("sheets.belongingssheet.carryingcapacity.title", Json_decode.string, json),
          sheets_belongingssheet_carryingcapacity_calc: Json_decode.field("sheets.belongingssheet.carryingcapacity.calc", Json_decode.string, json),
          sheets_belongingssheet_carryingcapacity_label: Json_decode.field("sheets.belongingssheet.carryingcapacity.label", Json_decode.string, json),
          sheets_belongingssheet_animal_title: Json_decode.field("sheets.belongingssheet.animal.title", Json_decode.string, json),
          sheets_belongingssheet_animal_name: Json_decode.field("sheets.belongingssheet.animal.name", Json_decode.string, json),
          sheets_belongingssheet_animal_sizecategory: Json_decode.field("sheets.belongingssheet.animal.sizecategory", Json_decode.string, json),
          sheets_belongingssheet_animal_type: Json_decode.field("sheets.belongingssheet.animal.type", Json_decode.string, json),
          sheets_belongingssheet_animal_ap: Json_decode.field("sheets.belongingssheet.animal.ap", Json_decode.string, json),
          sheets_belongingssheet_animal_protection: Json_decode.field("sheets.belongingssheet.animal.protection", Json_decode.string, json),
          sheets_belongingssheet_animal_attackname: Json_decode.field("sheets.belongingssheet.animal.attackname", Json_decode.string, json),
          sheets_belongingssheet_animal_attack: Json_decode.field("sheets.belongingssheet.animal.attack", Json_decode.string, json),
          sheets_belongingssheet_animal_parry: Json_decode.field("sheets.belongingssheet.animal.parry", Json_decode.string, json),
          sheets_belongingssheet_animal_damagepoints: Json_decode.field("sheets.belongingssheet.animal.damagepoints", Json_decode.string, json),
          sheets_belongingssheet_animal_reach: Json_decode.field("sheets.belongingssheet.animal.reach", Json_decode.string, json),
          sheets_belongingssheet_animal_actions: Json_decode.field("sheets.belongingssheet.animal.actions", Json_decode.string, json),
          sheets_belongingssheet_animal_skills: Json_decode.field("sheets.belongingssheet.animal.skills", Json_decode.string, json),
          sheets_belongingssheet_animal_specialabilities: Json_decode.field("sheets.belongingssheet.animal.specialabilities", Json_decode.string, json),
          sheets_belongingssheet_animal_notes: Json_decode.field("sheets.belongingssheet.animal.notes", Json_decode.string, json),
          sheets_spellssheet_title: Json_decode.field("sheets.spellssheet.title", Json_decode.string, json),
          sheets_spellssheet_header_labels_aemax: Json_decode.field("sheets.spellssheet.header.labels.aemax", Json_decode.string, json),
          sheets_spellssheet_header_labels_aecurrent: Json_decode.field("sheets.spellssheet.header.labels.aecurrent", Json_decode.string, json),
          sheets_spellssheet_spellstable_title: Json_decode.field("sheets.spellssheet.spellstable.title", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_spellorritual: Json_decode.field("sheets.spellssheet.spellstable.labels.spellorritual", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_check: Json_decode.field("sheets.spellssheet.spellstable.labels.check", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_skillrating: Json_decode.field("sheets.spellssheet.spellstable.labels.skillrating", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_cost: Json_decode.field("sheets.spellssheet.spellstable.labels.cost", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_castingtime: Json_decode.field("sheets.spellssheet.spellstable.labels.castingtime", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_range: Json_decode.field("sheets.spellssheet.spellstable.labels.range", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_duration: Json_decode.field("sheets.spellssheet.spellstable.labels.duration", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_property: Json_decode.field("sheets.spellssheet.spellstable.labels.property", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_improvementcost: Json_decode.field("sheets.spellssheet.spellstable.labels.improvementcost", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_effect: Json_decode.field("sheets.spellssheet.spellstable.labels.effect", Json_decode.string, json),
          sheets_spellssheet_spellstable_labels_pages: Json_decode.field("sheets.spellssheet.spellstable.labels.pages", Json_decode.string, json),
          sheets_spellssheet_spellstable_unfamiliarspell: Json_decode.field("sheets.spellssheet.spellstable.unfamiliarspell", Json_decode.string, json),
          sheets_spellssheet_primaryattribute: Json_decode.field("sheets.spellssheet.primaryattribute", Json_decode.string, json),
          sheets_spellssheet_properties: Json_decode.field("sheets.spellssheet.properties", Json_decode.string, json),
          sheets_spellssheet_tradition: Json_decode.field("sheets.spellssheet.tradition", Json_decode.string, json),
          sheets_spellssheet_magicalspecialabilities: Json_decode.field("sheets.spellssheet.magicalspecialabilities", Json_decode.string, json),
          sheets_spellssheet_cantrips: Json_decode.field("sheets.spellssheet.cantrips", Json_decode.string, json),
          sheets_chantssheet_title: Json_decode.field("sheets.chantssheet.title", Json_decode.string, json),
          sheets_chantssheet_header_labels_kpmax: Json_decode.field("sheets.chantssheet.header.labels.kpmax", Json_decode.string, json),
          sheets_chantssheet_header_labels_kpcurrent: Json_decode.field("sheets.chantssheet.header.labels.kpcurrent", Json_decode.string, json),
          sheets_chantssheet_chantstable_title: Json_decode.field("sheets.chantssheet.chantstable.title", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_chant: Json_decode.field("sheets.chantssheet.chantstable.labels.chant", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_check: Json_decode.field("sheets.chantssheet.chantstable.labels.check", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_skillrating: Json_decode.field("sheets.chantssheet.chantstable.labels.skillrating", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_cost: Json_decode.field("sheets.chantssheet.chantstable.labels.cost", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_castingtime: Json_decode.field("sheets.chantssheet.chantstable.labels.castingtime", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_range: Json_decode.field("sheets.chantssheet.chantstable.labels.range", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_duration: Json_decode.field("sheets.chantssheet.chantstable.labels.duration", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_aspect: Json_decode.field("sheets.chantssheet.chantstable.labels.aspect", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_improvementcost: Json_decode.field("sheets.chantssheet.chantstable.labels.improvementcost", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_effect: Json_decode.field("sheets.chantssheet.chantstable.labels.effect", Json_decode.string, json),
          sheets_chantssheet_chantstable_labels_pages: Json_decode.field("sheets.chantssheet.chantstable.labels.pages", Json_decode.string, json),
          sheets_chantssheet_primaryattribute: Json_decode.field("sheets.chantssheet.primaryattribute", Json_decode.string, json),
          sheets_chantssheet_aspects: Json_decode.field("sheets.chantssheet.aspects", Json_decode.string, json),
          sheets_chantssheet_tradition: Json_decode.field("sheets.chantssheet.tradition", Json_decode.string, json),
          sheets_chantssheet_blessedspecialabilities: Json_decode.field("sheets.chantssheet.blessedspecialabilities", Json_decode.string, json),
          sheets_chantssheet_blessings: Json_decode.field("sheets.chantssheet.blessings", Json_decode.string, json),
          pacts_pactcategory: Json_decode.field("pacts.pactcategory", Json_decode.string, json),
          pacts_nopact: Json_decode.field("pacts.nopact", Json_decode.string, json),
          pacts_pactlevel: Json_decode.field("pacts.pactlevel", Json_decode.string, json),
          pacts_fairytype: Json_decode.field("pacts.fairytype", Json_decode.string, json),
          pacts_domain: Json_decode.field("pacts.domain", Json_decode.string, json),
          pacts_userdefined: Json_decode.field("pacts.userdefined", Json_decode.string, json),
          pacts_demontype: Json_decode.field("pacts.demontype", Json_decode.string, json),
          pacts_circleofdamnation: Json_decode.field("pacts.circleofdamnation", Json_decode.string, json),
          pacts_minorpact: Json_decode.field("pacts.minorpact", Json_decode.string, json),
          pacts_pactisincompletehint: Json_decode.field("pacts.pactisincompletehint", Json_decode.string, json),
          pacts_name: Json_decode.field("pacts.name", Json_decode.string, json),
          rules_rulebase: Json_decode.field("rules.rulebase", Json_decode.string, json),
          rules_enableallrulebooks: Json_decode.field("rules.enableallrulebooks", Json_decode.string, json),
          rules_focusrules: Json_decode.field("rules.focusrules", Json_decode.string, json),
          rules_optionalrules: Json_decode.field("rules.optionalrules", Json_decode.string, json),
          rules_manualherodatarepair: Json_decode.field("rules.manualherodatarepair", Json_decode.string, json),
          rules_manualherodatarepairexplanation: Json_decode.field("rules.manualherodatarepairexplanation", Json_decode.string, json),
          inlinewiki_complementarysources: Json_decode.field("inlinewiki.complementarysources", Json_decode.string, json),
          race_header_name: Json_decode.field("race.header.name", Json_decode.string, json),
          race_header_adventurepoints: Json_decode.field("race.header.adventurepoints", Json_decode.string, json),
          race_header_adventurepoints_tooltip: Json_decode.field("race.header.adventurepoints.tooltip", Json_decode.string, json),
          inlinewiki_apvalue: Json_decode.field("inlinewiki.apvalue", Json_decode.string, json),
          inlinewiki_adventurepoints: Json_decode.field("inlinewiki.adventurepoints", Json_decode.string, json),
          inlinewiki_lifepointbasevalue: Json_decode.field("inlinewiki.lifepointbasevalue", Json_decode.string, json),
          inlinewiki_spiritbasevalue: Json_decode.field("inlinewiki.spiritbasevalue", Json_decode.string, json),
          inlinewiki_toughnessbasevalue: Json_decode.field("inlinewiki.toughnessbasevalue", Json_decode.string, json),
          inlinewiki_movementbasevalue: Json_decode.field("inlinewiki.movementbasevalue", Json_decode.string, json),
          inlinewiki_attributeadjustments: Json_decode.field("inlinewiki.attributeadjustments", Json_decode.string, json),
          inlinewiki_automaticadvantages: Json_decode.field("inlinewiki.automaticadvantages", Json_decode.string, json),
          inlinewiki_stronglyrecommendedadvantages: Json_decode.field("inlinewiki.stronglyrecommendedadvantages", Json_decode.string, json),
          inlinewiki_stronglyrecommendeddisadvantages: Json_decode.field("inlinewiki.stronglyrecommendeddisadvantages", Json_decode.string, json),
          inlinewiki_commoncultures: Json_decode.field("inlinewiki.commoncultures", Json_decode.string, json),
          inlinewiki_commonadvantages: Json_decode.field("inlinewiki.commonadvantages", Json_decode.string, json),
          inlinewiki_commondisadvantages: Json_decode.field("inlinewiki.commondisadvantages", Json_decode.string, json),
          inlinewiki_uncommonadvantages: Json_decode.field("inlinewiki.uncommonadvantages", Json_decode.string, json),
          inlinewiki_uncommondisadvantages: Json_decode.field("inlinewiki.uncommondisadvantages", Json_decode.string, json),
          culture_filters_common_allcultures: Json_decode.field("culture.filters.common.allcultures", Json_decode.string, json),
          culture_filters_common_commoncultures: Json_decode.field("culture.filters.common.commoncultures", Json_decode.string, json),
          culture_header_name: Json_decode.field("culture.header.name", Json_decode.string, json),
          inlinewiki_language: Json_decode.field("inlinewiki.language", Json_decode.string, json),
          inlinewiki_script: Json_decode.field("inlinewiki.script", Json_decode.string, json),
          inlinewiki_areaknowledge: Json_decode.field("inlinewiki.areaknowledge", Json_decode.string, json),
          inlinewiki_socialstatus: Json_decode.field("inlinewiki.socialstatus", Json_decode.string, json),
          inlinewiki_commonprofessions: Json_decode.field("inlinewiki.commonprofessions", Json_decode.string, json),
          inlinewiki_commonprofessions_mundane: Json_decode.field("inlinewiki.commonprofessions.mundane", Json_decode.string, json),
          inlinewiki_commonprofessions_magic: Json_decode.field("inlinewiki.commonprofessions.magic", Json_decode.string, json),
          inlinewiki_commonprofessions_blessed: Json_decode.field("inlinewiki.commonprofessions.blessed", Json_decode.string, json),
          inlinewiki_commonskills: Json_decode.field("inlinewiki.commonskills", Json_decode.string, json),
          inlinewiki_uncommonskills: Json_decode.field("inlinewiki.uncommonskills", Json_decode.string, json),
          inlinewiki_commonnames: Json_decode.field("inlinewiki.commonnames", Json_decode.string, json),
          inlinewiki_culturalpackage: Json_decode.field("inlinewiki.culturalpackage", Json_decode.string, json),
          profession_ownprofession: Json_decode.field("profession.ownprofession", Json_decode.string, json),
          profession_variants_novariant: Json_decode.field("profession.variants.novariant", Json_decode.string, json),
          profession_filters_common_allprofessions: Json_decode.field("profession.filters.common.allprofessions", Json_decode.string, json),
          profession_filters_common_commonprofessions: Json_decode.field("profession.filters.common.commonprofessions", Json_decode.string, json),
          profession_filters_groups_allprofessiongroups: Json_decode.field("profession.filters.groups.allprofessiongroups", Json_decode.string, json),
          profession_filters_groups_mundaneprofessions: Json_decode.field("profession.filters.groups.mundaneprofessions", Json_decode.string, json),
          profession_filters_groups_magicalprofessions: Json_decode.field("profession.filters.groups.magicalprofessions", Json_decode.string, json),
          profession_filters_groups_blessedprofessions: Json_decode.field("profession.filters.groups.blessedprofessions", Json_decode.string, json),
          profession_header_name: Json_decode.field("profession.header.name", Json_decode.string, json),
          profession_header_adventurepoints: Json_decode.field("profession.header.adventurepoints", Json_decode.string, json),
          profession_header_adventurepoints_tooltip: Json_decode.field("profession.header.adventurepoints.tooltip", Json_decode.string, json),
          inlinewiki_prerequisites: Json_decode.field("inlinewiki.prerequisites", Json_decode.string, json),
          inlinewiki_race: Json_decode.field("inlinewiki.race", Json_decode.string, json),
          inlinewiki_specialabilities: Json_decode.field("inlinewiki.specialabilities", Json_decode.string, json),
          inlinewiki_languagesandliteracytotalingap: Json_decode.field("inlinewiki.languagesandliteracytotalingap", Json_decode.string, json),
          inlinewiki_skillspecialization: Json_decode.field("inlinewiki.skillspecialization", Json_decode.string, json),
          inlinewiki_skillsselection: Json_decode.field("inlinewiki.skillsselection", Json_decode.string, json),
          inlinewiki_combattechniques: Json_decode.field("inlinewiki.combattechniques", Json_decode.string, json),
          inlinewiki_combattechniqueselection: Json_decode.field("inlinewiki.combattechniqueselection", Json_decode.string, json),
          inlinewiki_combattechnique_one: Json_decode.field("inlinewiki.combattechnique.one", Json_decode.string, json),
          inlinewiki_combattechnique_two: Json_decode.field("inlinewiki.combattechnique.two", Json_decode.string, json),
          inlinewiki_combattechniquesecondselection: Json_decode.field("inlinewiki.combattechniquesecondselection", Json_decode.string, json),
          inlinewiki_skills: Json_decode.field("inlinewiki.skills", Json_decode.string, json),
          inlinewiki_spells: Json_decode.field("inlinewiki.spells", Json_decode.string, json),
          inlinewiki_cursestotalingap: Json_decode.field("inlinewiki.cursestotalingap", Json_decode.string, json),
          inlinewiki_cantripsfromlist: Json_decode.field("inlinewiki.cantripsfromlist", Json_decode.string, json),
          inlinewiki_cantrip_one: Json_decode.field("inlinewiki.cantrip.one", Json_decode.string, json),
          inlinewiki_cantrip_two: Json_decode.field("inlinewiki.cantrip.two", Json_decode.string, json),
          inlinewiki_liturgicalchants: Json_decode.field("inlinewiki.liturgicalchants", Json_decode.string, json),
          inlinewiki_thetwelveblessings: Json_decode.field("inlinewiki.thetwelveblessings", Json_decode.string, json),
          inlinewiki_thetwelveblessingsexceptions: Json_decode.field("inlinewiki.thetwelveblessingsexceptions", Json_decode.string, json),
          inlinewiki_sixblessings: Json_decode.field("inlinewiki.sixblessings", Json_decode.string, json),
          inlinewiki_suggestedadvantages: Json_decode.field("inlinewiki.suggestedadvantages", Json_decode.string, json),
          inlinewiki_suggesteddisadvantages: Json_decode.field("inlinewiki.suggesteddisadvantages", Json_decode.string, json),
          inlinewiki_unsuitableadvantages: Json_decode.field("inlinewiki.unsuitableadvantages", Json_decode.string, json),
          inlinewiki_unsuitabledisadvantages: Json_decode.field("inlinewiki.unsuitabledisadvantages", Json_decode.string, json),
          inlinewiki_variants: Json_decode.field("inlinewiki.variants", Json_decode.string, json),
          inlinewiki_insteadof: Json_decode.field("inlinewiki.insteadof", Json_decode.string, json),
          rcpselectoptions_race: Json_decode.field("rcpselectoptions.race", Json_decode.string, json),
          rcpselectoptions_culture: Json_decode.field("rcpselectoptions.culture", Json_decode.string, json),
          rcpselectoptions_profession: Json_decode.field("rcpselectoptions.profession", Json_decode.string, json),
          rcpselectoptions_cantripsfromlist: Json_decode.field("rcpselectoptions.cantripsfromlist", Json_decode.string, json),
          rcpselectoptions_cantrip_one: Json_decode.field("rcpselectoptions.cantrip.one", Json_decode.string, json),
          rcpselectoptions_cantrip_two: Json_decode.field("rcpselectoptions.cantrip.two", Json_decode.string, json),
          rcpselectoptions_combattechniqueselection: Json_decode.field("rcpselectoptions.combattechniqueselection", Json_decode.string, json),
          rcpselectoptions_combattechnique_one: Json_decode.field("rcpselectoptions.combattechnique.one", Json_decode.string, json),
          rcpselectoptions_combattechnique_two: Json_decode.field("rcpselectoptions.combattechnique.two", Json_decode.string, json),
          rcpselectoptions_selectattributeadjustment: Json_decode.field("rcpselectoptions.selectattributeadjustment", Json_decode.string, json),
          rcpselectoptions_buyculturalpackage: Json_decode.field("rcpselectoptions.buyculturalpackage", Json_decode.string, json),
          rcpselectoptions_nativetongue_placeholder: Json_decode.field("rcpselectoptions.nativetongue.placeholder", Json_decode.string, json),
          rcpselectoptions_buyscript: Json_decode.field("rcpselectoptions.buyscript", Json_decode.string, json),
          rcpselectoptions_script_placeholder: Json_decode.field("rcpselectoptions.script.placeholder", Json_decode.string, json),
          rcpselectoptions_combattechniquesecondselection: Json_decode.field("rcpselectoptions.combattechniquesecondselection", Json_decode.string, json),
          rcpselectoptions_cursestotalingapleft: Json_decode.field("rcpselectoptions.cursestotalingapleft", Json_decode.string, json),
          rcpselectoptions_languagesandliteracytotalingapleft: Json_decode.field("rcpselectoptions.languagesandliteracytotalingapleft", Json_decode.string, json),
          rcpselectoptions_applicationforskillspecialization: Json_decode.field("rcpselectoptions.applicationforskillspecialization", Json_decode.string, json),
          rcpselectoptions_skillselectionap: Json_decode.field("rcpselectoptions.skillselectionap", Json_decode.string, json),
          rcpselectoptions_skillspecialization: Json_decode.field("rcpselectoptions.skillspecialization", Json_decode.string, json),
          rcpselectoptions_completebtn: Json_decode.field("rcpselectoptions.completebtn", Json_decode.string, json),
          rcpselectoptions_unfamiliarspells: Json_decode.field("rcpselectoptions.unfamiliarspells", Json_decode.string, json),
          rcpselectoptions_unfamiliarspellselectionfortraditionguildmage: Json_decode.field("rcpselectoptions.unfamiliarspellselectionfortraditionguildmage", Json_decode.string, json),
          rcpselectoptions_unfamiliarspell_placeholder: Json_decode.field("rcpselectoptions.unfamiliarspell.placeholder", Json_decode.string, json),
          rcpselectoptions_unfamiliarspell: Json_decode.field("rcpselectoptions.unfamiliarspell", Json_decode.string, json),
          attributes_totalpoints: Json_decode.field("attributes.totalpoints", Json_decode.string, json),
          attributes_attributeadjustmentselection: Json_decode.field("attributes.attributeadjustmentselection", Json_decode.string, json),
          attributes_derivedcharacteristics_tooltips_modifier: Json_decode.field("attributes.derivedcharacteristics.tooltips.modifier", Json_decode.string, json),
          attributes_derivedcharacteristics_tooltips_bought: Json_decode.field("attributes.derivedcharacteristics.tooltips.bought", Json_decode.string, json),
          attributes_derivedcharacteristics_tooltips_losttotal: Json_decode.field("attributes.derivedcharacteristics.tooltips.losttotal", Json_decode.string, json),
          attributes_derivedcharacteristics_tooltips_boughtback: Json_decode.field("attributes.derivedcharacteristics.tooltips.boughtback", Json_decode.string, json),
          attributes_lostpermanently_lifepoints: Json_decode.field("attributes.lostpermanently.lifepoints", Json_decode.string, json),
          attributes_lostpermanently_lifepoints_short: Json_decode.field("attributes.lostpermanently.lifepoints.short", Json_decode.string, json),
          attributes_lostpermanently_arcaneenergy: Json_decode.field("attributes.lostpermanently.arcaneenergy", Json_decode.string, json),
          attributes_lostpermanently_arcaneenergy_short: Json_decode.field("attributes.lostpermanently.arcaneenergy.short", Json_decode.string, json),
          attributes_lostpermanently_karmapoints: Json_decode.field("attributes.lostpermanently.karmapoints", Json_decode.string, json),
          attributes_lostpermanently_karmapoints_short: Json_decode.field("attributes.lostpermanently.karmapoints.short", Json_decode.string, json),
          attributes_removeenergypointslostpermanently_title: Json_decode.field("attributes.removeenergypointslostpermanently.title", Json_decode.string, json),
          attributes_removeenergypointslostpermanently_message: Json_decode.field("attributes.removeenergypointslostpermanently.message", Json_decode.string, json),
          attributes_removeenergypointslostpermanently_removebtn: Json_decode.field("attributes.removeenergypointslostpermanently.removebtn", Json_decode.string, json),
          attributes_pointslostpermanentlyeditor_boughtback: Json_decode.field("attributes.pointslostpermanentlyeditor.boughtback", Json_decode.string, json),
          attributes_pointslostpermanentlyeditor_spent: Json_decode.field("attributes.pointslostpermanentlyeditor.spent", Json_decode.string, json),
          advantages_filters_commonadvantages: Json_decode.field("advantages.filters.commonadvantages", Json_decode.string, json),
          disadvantages_filters_commondisadvantages: Json_decode.field("disadvantages.filters.commondisadvantages", Json_decode.string, json),
          advantagesdisadvantages_addbtn: Json_decode.field("advantagesdisadvantages.addbtn", Json_decode.string, json),
          advantagesdisadvantages_afraidof: Json_decode.field("advantagesdisadvantages.afraidof", Json_decode.string, json),
          advantagesdisadvantages_immunityto: Json_decode.field("advantagesdisadvantages.immunityto", Json_decode.string, json),
          advantagesdisadvantages_hatredfor: Json_decode.field("advantagesdisadvantages.hatredfor", Json_decode.string, json),
          advantagesdisadvantages_header_name: Json_decode.field("advantagesdisadvantages.header.name", Json_decode.string, json),
          advantagesdisadvantages_header_adventurepoints: Json_decode.field("advantagesdisadvantages.header.adventurepoints", Json_decode.string, json),
          advantagesdisadvantages_header_adventurepoints_tooltip: Json_decode.field("advantagesdisadvantages.header.adventurepoints.tooltip", Json_decode.string, json),
          advantagesdisadvantages_apspent_spentonadvantages: Json_decode.field("advantagesdisadvantages.apspent.spentonadvantages", Json_decode.string, json),
          advantagesdisadvantages_apspent_spentonmagicadvantages: Json_decode.field("advantagesdisadvantages.apspent.spentonmagicadvantages", Json_decode.string, json),
          advantagesdisadvantages_apspent_spentonblessedadvantages: Json_decode.field("advantagesdisadvantages.apspent.spentonblessedadvantages", Json_decode.string, json),
          advantagesdisadvantages_apspent_spentondisadvantages: Json_decode.field("advantagesdisadvantages.apspent.spentondisadvantages", Json_decode.string, json),
          advantagesdisadvantages_apspent_spentonmagicdisadvantages: Json_decode.field("advantagesdisadvantages.apspent.spentonmagicdisadvantages", Json_decode.string, json),
          advantagesdisadvantages_apspent_spentonblesseddisadvantages: Json_decode.field("advantagesdisadvantages.apspent.spentonblesseddisadvantages", Json_decode.string, json),
          advantagesdisadvantages_dialogs_customcost_title: Json_decode.field("advantagesdisadvantages.dialogs.customcost.title", Json_decode.string, json),
          advantagesdisadvantages_dialogs_customcost_for: Json_decode.field("advantagesdisadvantages.dialogs.customcost.for", Json_decode.string, json),
          specialabilities_addbtn: Json_decode.field("specialabilities.addbtn", Json_decode.string, json),
          specialabilities_header_name: Json_decode.field("specialabilities.header.name", Json_decode.string, json),
          specialabilities_header_group: Json_decode.field("specialabilities.header.group", Json_decode.string, json),
          specialabilities_header_adventurepoints: Json_decode.field("specialabilities.header.adventurepoints", Json_decode.string, json),
          specialabilities_header_adventurepoints_tooltip: Json_decode.field("specialabilities.header.adventurepoints.tooltip", Json_decode.string, json),
          specialabilities_nativetonguelevel: Json_decode.field("specialabilities.nativetonguelevel", Json_decode.string, json),
          inlinewiki_rule: Json_decode.field("inlinewiki.rule", Json_decode.string, json),
          inlinewiki_effect: Json_decode.field("inlinewiki.effect", Json_decode.string, json),
          inlinewiki_extendedcombatspecialabilities: Json_decode.field("inlinewiki.extendedcombatspecialabilities", Json_decode.string, json),
          inlinewiki_extendedmagicalspecialabilities: Json_decode.field("inlinewiki.extendedmagicalspecialabilities", Json_decode.string, json),
          inlinewiki_extendedblessedspecialabilities: Json_decode.field("inlinewiki.extendedblessedspecialabilities", Json_decode.string, json),
          inlinewiki_extendedskillspecialabilities: Json_decode.field("inlinewiki.extendedskillspecialabilities", Json_decode.string, json),
          inlinewiki_penalty: Json_decode.field("inlinewiki.penalty", Json_decode.string, json),
          inlinewiki_level: Json_decode.field("inlinewiki.level", Json_decode.string, json),
          inlinewiki_perlevel: Json_decode.field("inlinewiki.perlevel", Json_decode.string, json),
          inlinewiki_volume: Json_decode.field("inlinewiki.volume", Json_decode.string, json),
          inlinewiki_aspect: Json_decode.field("inlinewiki.aspect", Json_decode.string, json),
          inlinewiki_bindingcost: Json_decode.field("inlinewiki.bindingcost", Json_decode.string, json),
          inlinewiki_protectivecircle: Json_decode.field("inlinewiki.protectivecircle", Json_decode.string, json),
          inlinewiki_wardingcircle: Json_decode.field("inlinewiki.wardingcircle", Json_decode.string, json),
          inlinewiki_actions: Json_decode.field("inlinewiki.actions", Json_decode.string, json),
          inlinewiki_racecultureorprofessionrequiresautomaticorsuggested: Json_decode.field("inlinewiki.racecultureorprofessionrequiresautomaticorsuggested", Json_decode.string, json),
          inlinewiki_advantage: Json_decode.field("inlinewiki.advantage", Json_decode.string, json),
          inlinewiki_disadvantage: Json_decode.field("inlinewiki.disadvantage", Json_decode.string, json),
          inlinewiki_primaryattributeofthetradition: Json_decode.field("inlinewiki.primaryattributeofthetradition", Json_decode.string, json),
          inlinewiki_knowledgeofspell: Json_decode.field("inlinewiki.knowledgeofspell", Json_decode.string, json),
          inlinewiki_knowledgeofliturgicalchant: Json_decode.field("inlinewiki.knowledgeofliturgicalchant", Json_decode.string, json),
          inlinewiki_appropriatecombatstylespecialability: Json_decode.field("inlinewiki.appropriatecombatstylespecialability", Json_decode.string, json),
          inlinewiki_appropriatemagicalstylespecialability: Json_decode.field("inlinewiki.appropriatemagicalstylespecialability", Json_decode.string, json),
          inlinewiki_appropriateblessedstylespecialability: Json_decode.field("inlinewiki.appropriateblessedstylespecialability", Json_decode.string, json),
          inlinewiki_appropriateskillstylespecialability: Json_decode.field("inlinewiki.appropriateskillstylespecialability", Json_decode.string, json),
          inlinewiki_sex: Json_decode.field("inlinewiki.sex", Json_decode.string, json),
          inlinewiki_sex_male: Json_decode.field("inlinewiki.sex.male", Json_decode.string, json),
          inlinewiki_sex_female: Json_decode.field("inlinewiki.sex.female", Json_decode.string, json),
          inlinewiki_combattechniques_groups_all: Json_decode.field("inlinewiki.combattechniques.groups.all", Json_decode.string, json),
          inlinewiki_combattechniques_groups_allmeleecombattechniques: Json_decode.field("inlinewiki.combattechniques.groups.allmeleecombattechniques", Json_decode.string, json),
          inlinewiki_combattechniques_groups_allrangedcombattechniques: Json_decode.field("inlinewiki.combattechniques.groups.allrangedcombattechniques", Json_decode.string, json),
          inlinewiki_combattechniques_groups_allmeleecombattechniqueswithparry: Json_decode.field("inlinewiki.combattechniques.groups.allmeleecombattechniqueswithparry", Json_decode.string, json),
          inlinewiki_combattechniques_groups_allmeleecombattechniquesforonehandedweapons: Json_decode.field("inlinewiki.combattechniques.groups.allmeleecombattechniquesforonehandedweapons", Json_decode.string, json),
          inlinewiki_socialstatusxorhigher: Json_decode.field("inlinewiki.socialstatusxorhigher", Json_decode.string, json),
          skills_commonskills: Json_decode.field("skills.commonskills", Json_decode.string, json),
          skills_header_name: Json_decode.field("skills.header.name", Json_decode.string, json),
          skills_header_skillrating: Json_decode.field("skills.header.skillrating", Json_decode.string, json),
          skills_header_skillrating_tooltip: Json_decode.field("skills.header.skillrating.tooltip", Json_decode.string, json),
          skills_header_group: Json_decode.field("skills.header.group", Json_decode.string, json),
          skills_header_check: Json_decode.field("skills.header.check", Json_decode.string, json),
          skills_header_improvementcost: Json_decode.field("skills.header.improvementcost", Json_decode.string, json),
          skills_header_improvementcost_tooltip: Json_decode.field("skills.header.improvementcost.tooltip", Json_decode.string, json),
          inlinewiki_check: Json_decode.field("inlinewiki.check", Json_decode.string, json),
          inlinewiki_newapplications: Json_decode.field("inlinewiki.newapplications", Json_decode.string, json),
          inlinewiki_applications: Json_decode.field("inlinewiki.applications", Json_decode.string, json),
          inlinewiki_uses: Json_decode.field("inlinewiki.uses", Json_decode.string, json),
          inlinewiki_encumbrance: Json_decode.field("inlinewiki.encumbrance", Json_decode.string, json),
          inlinewiki_encumbrance_yes: Json_decode.field("inlinewiki.encumbrance.yes", Json_decode.string, json),
          inlinewiki_encumbrance_no: Json_decode.field("inlinewiki.encumbrance.no", Json_decode.string, json),
          inlinewiki_encumbrance_maybe: Json_decode.field("inlinewiki.encumbrance.maybe", Json_decode.string, json),
          inlinewiki_tools: Json_decode.field("inlinewiki.tools", Json_decode.string, json),
          inlinewiki_quality: Json_decode.field("inlinewiki.quality", Json_decode.string, json),
          inlinewiki_failedcheck: Json_decode.field("inlinewiki.failedcheck", Json_decode.string, json),
          inlinewiki_criticalsuccess: Json_decode.field("inlinewiki.criticalsuccess", Json_decode.string, json),
          inlinewiki_botch: Json_decode.field("inlinewiki.botch", Json_decode.string, json),
          inlinewiki_improvementcost: Json_decode.field("inlinewiki.improvementcost", Json_decode.string, json),
          showfrequency_stronglyrecommended: Json_decode.field("showfrequency.stronglyrecommended", Json_decode.string, json),
          showfrequency_common: Json_decode.field("showfrequency.common", Json_decode.string, json),
          showfrequency_uncommon: Json_decode.field("showfrequency.uncommon", Json_decode.string, json),
          showfrequency_unfamiliarspells: Json_decode.field("showfrequency.unfamiliarspells", Json_decode.string, json),
          combattechniques_header_name: Json_decode.field("combattechniques.header.name", Json_decode.string, json),
          combattechniques_header_group: Json_decode.field("combattechniques.header.group", Json_decode.string, json),
          combattechniques_header_combattechniquerating: Json_decode.field("combattechniques.header.combattechniquerating", Json_decode.string, json),
          combattechniques_header_combattechniquerating_tooltip: Json_decode.field("combattechniques.header.combattechniquerating.tooltip", Json_decode.string, json),
          combattechniques_header_improvementcost: Json_decode.field("combattechniques.header.improvementcost", Json_decode.string, json),
          combattechniques_header_improvementcost_tooltip: Json_decode.field("combattechniques.header.improvementcost.tooltip", Json_decode.string, json),
          combattechniques_header_primaryattribute: Json_decode.field("combattechniques.header.primaryattribute", Json_decode.string, json),
          combattechniques_header_primaryattribute_tooltip: Json_decode.field("combattechniques.header.primaryattribute.tooltip", Json_decode.string, json),
          combattechniques_header_attack: Json_decode.field("combattechniques.header.attack", Json_decode.string, json),
          combattechniques_header_attack_tooltip: Json_decode.field("combattechniques.header.attack.tooltip", Json_decode.string, json),
          combattechniques_header_parry: Json_decode.field("combattechniques.header.parry", Json_decode.string, json),
          combattechniques_header_parry_tooltip: Json_decode.field("combattechniques.header.parry.tooltip", Json_decode.string, json),
          inlinewiki_special: Json_decode.field("inlinewiki.special", Json_decode.string, json),
          inlinewiki_primaryattribute: Json_decode.field("inlinewiki.primaryattribute", Json_decode.string, json),
          spells_addbtn: Json_decode.field("spells.addbtn", Json_decode.string, json),
          spells_header_name: Json_decode.field("spells.header.name", Json_decode.string, json),
          spells_header_property: Json_decode.field("spells.header.property", Json_decode.string, json),
          spells_header_group: Json_decode.field("spells.header.group", Json_decode.string, json),
          spells_header_skillrating: Json_decode.field("spells.header.skillrating", Json_decode.string, json),
          spells_header_skillrating_tooltip: Json_decode.field("spells.header.skillrating.tooltip", Json_decode.string, json),
          spells_header_check: Json_decode.field("spells.header.check", Json_decode.string, json),
          spells_header_checkmodifier: Json_decode.field("spells.header.checkmodifier", Json_decode.string, json),
          spells_header_checkmodifier_tooltip: Json_decode.field("spells.header.checkmodifier.tooltip", Json_decode.string, json),
          spells_header_improvementcost: Json_decode.field("spells.header.improvementcost", Json_decode.string, json),
          spells_header_improvementcost_tooltip: Json_decode.field("spells.header.improvementcost.tooltip", Json_decode.string, json),
          spells_groups_cantrip: Json_decode.field("spells.groups.cantrip", Json_decode.string, json),
          spells_traditions_general: Json_decode.field("spells.traditions.general", Json_decode.string, json),
          magicalactions_animistforces_tribes_general: Json_decode.field("magicalactions.animistforces.tribes.general", Json_decode.string, json),
          inlinewiki_castingtime: Json_decode.field("inlinewiki.castingtime", Json_decode.string, json),
          inlinewiki_ritualtime: Json_decode.field("inlinewiki.ritualtime", Json_decode.string, json),
          inlinewiki_aecost: Json_decode.field("inlinewiki.aecost", Json_decode.string, json),
          inlinewiki_range: Json_decode.field("inlinewiki.range", Json_decode.string, json),
          inlinewiki_duration: Json_decode.field("inlinewiki.duration", Json_decode.string, json),
          inlinewiki_targetcategory: Json_decode.field("inlinewiki.targetcategory", Json_decode.string, json),
          inlinewiki_property: Json_decode.field("inlinewiki.property", Json_decode.string, json),
          inlinewiki_traditions: Json_decode.field("inlinewiki.traditions", Json_decode.string, json),
          inlinewiki_skill: Json_decode.field("inlinewiki.skill", Json_decode.string, json),
          inlinewiki_lengthoftime: Json_decode.field("inlinewiki.lengthoftime", Json_decode.string, json),
          inlinewiki_musictradition: Json_decode.field("inlinewiki.musictradition", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthisspellscastingtime: Json_decode.field("inlinewiki.youcannotuseamodificationonthisspellscastingtime", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthisspellsritualtime: Json_decode.field("inlinewiki.youcannotuseamodificationonthisspellsritualtime", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthisspellscost: Json_decode.field("inlinewiki.youcannotuseamodificationonthisspellscost", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthisspellsrange: Json_decode.field("inlinewiki.youcannotuseamodificationonthisspellsrange", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthisspellsduration: Json_decode.field("inlinewiki.youcannotuseamodificationonthisspellsduration", Json_decode.string, json),
          inlinewiki_spellenhancements: Json_decode.field("inlinewiki.spellenhancements", Json_decode.string, json),
          inlinewiki_spellenhancements_title: Json_decode.field("inlinewiki.spellenhancements.title", Json_decode.string, json),
          inlinewiki_tribaltraditions: Json_decode.field("inlinewiki.tribaltraditions", Json_decode.string, json),
          inlinewiki_brew: Json_decode.field("inlinewiki.brew", Json_decode.string, json),
          inlinewiki_spirithalf: Json_decode.field("inlinewiki.spirithalf", Json_decode.string, json),
          inlinewiki_spirithalf_short: Json_decode.field("inlinewiki.spirithalf.short", Json_decode.string, json),
          inlinewiki_spiritortoughness: Json_decode.field("inlinewiki.spiritortoughness", Json_decode.string, json),
          inlinewiki_spiritortoughness_short: Json_decode.field("inlinewiki.spiritortoughness.short", Json_decode.string, json),
          inlinewiki_note: Json_decode.field("inlinewiki.note", Json_decode.string, json),
          liturgicalchants_addbtn: Json_decode.field("liturgicalchants.addbtn", Json_decode.string, json),
          liturgicalchants_header_name: Json_decode.field("liturgicalchants.header.name", Json_decode.string, json),
          liturgicalchants_header_traditions: Json_decode.field("liturgicalchants.header.traditions", Json_decode.string, json),
          liturgicalchants_header_group: Json_decode.field("liturgicalchants.header.group", Json_decode.string, json),
          liturgicalchants_header_skillrating: Json_decode.field("liturgicalchants.header.skillrating", Json_decode.string, json),
          liturgicalchants_header_skillrating_tooltip: Json_decode.field("liturgicalchants.header.skillrating.tooltip", Json_decode.string, json),
          liturgicalchants_header_check: Json_decode.field("liturgicalchants.header.check", Json_decode.string, json),
          liturgicalchants_header_checkmodifier: Json_decode.field("liturgicalchants.header.checkmodifier", Json_decode.string, json),
          liturgicalchants_header_checkmodifier_tooltip: Json_decode.field("liturgicalchants.header.checkmodifier.tooltip", Json_decode.string, json),
          liturgicalchants_header_improvementcost: Json_decode.field("liturgicalchants.header.improvementcost", Json_decode.string, json),
          liturgicalchants_header_improvementcost_tooltip: Json_decode.field("liturgicalchants.header.improvementcost.tooltip", Json_decode.string, json),
          liturgicalchants_groups_blessing: Json_decode.field("liturgicalchants.groups.blessing", Json_decode.string, json),
          liturgicalchants_aspects_general: Json_decode.field("liturgicalchants.aspects.general", Json_decode.string, json),
          inlinewiki_liturgicaltime: Json_decode.field("inlinewiki.liturgicaltime", Json_decode.string, json),
          inlinewiki_ceremonialtime: Json_decode.field("inlinewiki.ceremonialtime", Json_decode.string, json),
          inlinewiki_kpcost: Json_decode.field("inlinewiki.kpcost", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthischantsliturgicaltime: Json_decode.field("inlinewiki.youcannotuseamodificationonthischantsliturgicaltime", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthischantsceremonialtime: Json_decode.field("inlinewiki.youcannotuseamodificationonthischantsceremonialtime", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthischantscost: Json_decode.field("inlinewiki.youcannotuseamodificationonthischantscost", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthischantsrange: Json_decode.field("inlinewiki.youcannotuseamodificationonthischantsrange", Json_decode.string, json),
          inlinewiki_youcannotuseamodificationonthischantsduration: Json_decode.field("inlinewiki.youcannotuseamodificationonthischantsduration", Json_decode.string, json),
          inlinewiki_liturgicalchantenhancements: Json_decode.field("inlinewiki.liturgicalchantenhancements", Json_decode.string, json),
          inlinewiki_liturgicalchantenhancements_title: Json_decode.field("inlinewiki.liturgicalchantenhancements.title", Json_decode.string, json),
          equipment_header_name: Json_decode.field("equipment.header.name", Json_decode.string, json),
          equipment_header_group: Json_decode.field("equipment.header.group", Json_decode.string, json),
          equipment_addbtn: Json_decode.field("equipment.addbtn", Json_decode.string, json),
          equipment_createbtn: Json_decode.field("equipment.createbtn", Json_decode.string, json),
          equipment_filters_allcombattechniques: Json_decode.field("equipment.filters.allcombattechniques", Json_decode.string, json),
          equipment_purse_title: Json_decode.field("equipment.purse.title", Json_decode.string, json),
          equipment_purse_ducats: Json_decode.field("equipment.purse.ducats", Json_decode.string, json),
          equipment_purse_silverthalers: Json_decode.field("equipment.purse.silverthalers", Json_decode.string, json),
          equipment_purse_halers: Json_decode.field("equipment.purse.halers", Json_decode.string, json),
          equipment_purse_kreutzers: Json_decode.field("equipment.purse.kreutzers", Json_decode.string, json),
          equipment_purse_carryingcapacity: Json_decode.field("equipment.purse.carryingcapacity", Json_decode.string, json),
          equipment_purse_initialstartingwealthandcarryingcapacity: Json_decode.field("equipment.purse.initialstartingwealthandcarryingcapacity", Json_decode.string, json),
          equipment_dialogs_addedit_damage: Json_decode.field("equipment.dialogs.addedit.damage", Json_decode.string, json),
          equipment_dialogs_addedit_length: Json_decode.field("equipment.dialogs.addedit.length", Json_decode.string, json),
          equipment_dialogs_addedit_range: Json_decode.field("equipment.dialogs.addedit.range", Json_decode.string, json),
          equipment_dialogs_addedit_edititem: Json_decode.field("equipment.dialogs.addedit.edititem", Json_decode.string, json),
          equipment_dialogs_addedit_createitem: Json_decode.field("equipment.dialogs.addedit.createitem", Json_decode.string, json),
          equipment_dialogs_addedit_number: Json_decode.field("equipment.dialogs.addedit.number", Json_decode.string, json),
          equipment_dialogs_addedit_name: Json_decode.field("equipment.dialogs.addedit.name", Json_decode.string, json),
          equipment_dialogs_addedit_price: Json_decode.field("equipment.dialogs.addedit.price", Json_decode.string, json),
          equipment_dialogs_addedit_weight: Json_decode.field("equipment.dialogs.addedit.weight", Json_decode.string, json),
          equipment_dialogs_addedit_carriedwhere: Json_decode.field("equipment.dialogs.addedit.carriedwhere", Json_decode.string, json),
          equipment_dialogs_addedit_itemgroup: Json_decode.field("equipment.dialogs.addedit.itemgroup", Json_decode.string, json),
          equipment_dialogs_addedit_itemgrouphint: Json_decode.field("equipment.dialogs.addedit.itemgrouphint", Json_decode.string, json),
          equipment_dialogs_addedit_improvisedweapon: Json_decode.field("equipment.dialogs.addedit.improvisedweapon", Json_decode.string, json),
          equipment_dialogs_addedit_improvisedweapongroup: Json_decode.field("equipment.dialogs.addedit.improvisedweapongroup", Json_decode.string, json),
          equipment_dialogs_addedit_template: Json_decode.field("equipment.dialogs.addedit.template", Json_decode.string, json),
          equipment_dialogs_addedit_combattechnique: Json_decode.field("equipment.dialogs.addedit.combattechnique", Json_decode.string, json),
          equipment_dialogs_addedit_primaryattributeanddamagethreshold: Json_decode.field("equipment.dialogs.addedit.primaryattributeanddamagethreshold", Json_decode.string, json),
          equipment_dialogs_addedit_primaryattribute: Json_decode.field("equipment.dialogs.addedit.primaryattribute", Json_decode.string, json),
          equipment_dialogs_addedit_primaryattribute_short: Json_decode.field("equipment.dialogs.addedit.primaryattribute.short", Json_decode.string, json),
          equipment_dialogs_addedit_damagethreshold: Json_decode.field("equipment.dialogs.addedit.damagethreshold", Json_decode.string, json),
          equipment_dialogs_addedit_separatedamagethresholds: Json_decode.field("equipment.dialogs.addedit.separatedamagethresholds", Json_decode.string, json),
          equipment_dialogs_addedit_breakingpointratingmodifier: Json_decode.field("equipment.dialogs.addedit.breakingpointratingmodifier", Json_decode.string, json),
          equipment_dialogs_addedit_damaged: Json_decode.field("equipment.dialogs.addedit.damaged", Json_decode.string, json),
          equipment_dialogs_addedit_reach: Json_decode.field("equipment.dialogs.addedit.reach", Json_decode.string, json),
          equipment_dialogs_addedit_attackparrymodifier: Json_decode.field("equipment.dialogs.addedit.attackparrymodifier", Json_decode.string, json),
          equipment_dialogs_addedit_structurepoints: Json_decode.field("equipment.dialogs.addedit.structurepoints", Json_decode.string, json),
          equipment_dialogs_addedit_lengthwithunit: Json_decode.field("equipment.dialogs.addedit.lengthwithunit", Json_decode.string, json),
          equipment_dialogs_addedit_parryingweapon: Json_decode.field("equipment.dialogs.addedit.parryingweapon", Json_decode.string, json),
          equipment_dialogs_addedit_twohandedweapon: Json_decode.field("equipment.dialogs.addedit.twohandedweapon", Json_decode.string, json),
          equipment_dialogs_addedit_reloadtime: Json_decode.field("equipment.dialogs.addedit.reloadtime", Json_decode.string, json),
          equipment_dialogs_addedit_rangeclose: Json_decode.field("equipment.dialogs.addedit.rangeclose", Json_decode.string, json),
          equipment_dialogs_addedit_rangemedium: Json_decode.field("equipment.dialogs.addedit.rangemedium", Json_decode.string, json),
          equipment_dialogs_addedit_rangefar: Json_decode.field("equipment.dialogs.addedit.rangefar", Json_decode.string, json),
          equipment_dialogs_addedit_ammunition: Json_decode.field("equipment.dialogs.addedit.ammunition", Json_decode.string, json),
          equipment_dialogs_addedit_protection: Json_decode.field("equipment.dialogs.addedit.protection", Json_decode.string, json),
          equipment_dialogs_addedit_encumbrance: Json_decode.field("equipment.dialogs.addedit.encumbrance", Json_decode.string, json),
          equipment_dialogs_addedit_armortype: Json_decode.field("equipment.dialogs.addedit.armortype", Json_decode.string, json),
          equipment_dialogs_addedit_sturdinessmodifier: Json_decode.field("equipment.dialogs.addedit.sturdinessmodifier", Json_decode.string, json),
          equipment_dialogs_addedit_wear: Json_decode.field("equipment.dialogs.addedit.wear", Json_decode.string, json),
          equipment_dialogs_addedit_hitzonearmoronly: Json_decode.field("equipment.dialogs.addedit.hitzonearmoronly", Json_decode.string, json),
          equipment_dialogs_addedit_movementmodifier: Json_decode.field("equipment.dialogs.addedit.movementmodifier", Json_decode.string, json),
          equipment_dialogs_addedit_initiativemodifier: Json_decode.field("equipment.dialogs.addedit.initiativemodifier", Json_decode.string, json),
          equipment_dialogs_addedit_additionalpenalties: Json_decode.field("equipment.dialogs.addedit.additionalpenalties", Json_decode.string, json),
          hitzonearmors_header_name: Json_decode.field("hitzonearmors.header.name", Json_decode.string, json),
          hitzonearmors_createbtn: Json_decode.field("hitzonearmors.createbtn", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_name: Json_decode.field("hitzonearmors.dialogs.addedit.name", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_edithitzonearmor: Json_decode.field("hitzonearmors.dialogs.addedit.edithitzonearmor", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_createhitzonearmor: Json_decode.field("hitzonearmors.dialogs.addedit.createhitzonearmor", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_head: Json_decode.field("hitzonearmors.dialogs.addedit.head", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_torso: Json_decode.field("hitzonearmors.dialogs.addedit.torso", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_leftarm: Json_decode.field("hitzonearmors.dialogs.addedit.leftarm", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_rightarm: Json_decode.field("hitzonearmors.dialogs.addedit.rightarm", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_leftleg: Json_decode.field("hitzonearmors.dialogs.addedit.leftleg", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_rightleg: Json_decode.field("hitzonearmors.dialogs.addedit.rightleg", Json_decode.string, json),
          hitzonearmors_dialogs_addedit_wear: Json_decode.field("hitzonearmors.dialogs.addedit.wear", Json_decode.string, json),
          inlinewiki_equipment_weight: Json_decode.field("inlinewiki.equipment.weight", Json_decode.string, json),
          inlinewiki_equipment_price: Json_decode.field("inlinewiki.equipment.price", Json_decode.string, json),
          inlinewiki_equipment_ammunition: Json_decode.field("inlinewiki.equipment.ammunition", Json_decode.string, json),
          inlinewiki_equipment_combattechnique: Json_decode.field("inlinewiki.equipment.combattechnique", Json_decode.string, json),
          inlinewiki_equipment_damage: Json_decode.field("inlinewiki.equipment.damage", Json_decode.string, json),
          inlinewiki_equipment_primaryattributeanddamagethreshold: Json_decode.field("inlinewiki.equipment.primaryattributeanddamagethreshold", Json_decode.string, json),
          inlinewiki_equipment_attackparrymodifier: Json_decode.field("inlinewiki.equipment.attackparrymodifier", Json_decode.string, json),
          inlinewiki_equipment_reach: Json_decode.field("inlinewiki.equipment.reach", Json_decode.string, json),
          inlinewiki_equipment_length: Json_decode.field("inlinewiki.equipment.length", Json_decode.string, json),
          inlinewiki_equipment_reloadtime: Json_decode.field("inlinewiki.equipment.reloadtime", Json_decode.string, json),
          inlinewiki_equipment_range: Json_decode.field("inlinewiki.equipment.range", Json_decode.string, json),
          inlinewiki_equipment_actionsvalue: Json_decode.field("inlinewiki.equipment.actionsvalue", Json_decode.string, json),
          inlinewiki_equipment_protection: Json_decode.field("inlinewiki.equipment.protection", Json_decode.string, json),
          inlinewiki_equipment_encumbrance: Json_decode.field("inlinewiki.equipment.encumbrance", Json_decode.string, json),
          inlinewiki_equipment_additionalpenalties: Json_decode.field("inlinewiki.equipment.additionalpenalties", Json_decode.string, json),
          inlinewiki_equipment_note: Json_decode.field("inlinewiki.equipment.note", Json_decode.string, json),
          inlinewiki_equipment_rules: Json_decode.field("inlinewiki.equipment.rules", Json_decode.string, json),
          inlinewiki_equipment_weaponadvantage: Json_decode.field("inlinewiki.equipment.weaponadvantage", Json_decode.string, json),
          inlinewiki_equipment_weapondisadvantage: Json_decode.field("inlinewiki.equipment.weapondisadvantage", Json_decode.string, json),
          inlinewiki_equipment_armoradvantage: Json_decode.field("inlinewiki.equipment.armoradvantage", Json_decode.string, json),
          inlinewiki_equipment_armordisadvantage: Json_decode.field("inlinewiki.equipment.armordisadvantage", Json_decode.string, json),
          pets_dialogs_addedit_deleteavatarbtn: Json_decode.field("pets.dialogs.addedit.deleteavatarbtn", Json_decode.string, json),
          pets_dialogs_addedit_name: Json_decode.field("pets.dialogs.addedit.name", Json_decode.string, json),
          pets_dialogs_addedit_sizecategory: Json_decode.field("pets.dialogs.addedit.sizecategory", Json_decode.string, json),
          pets_dialogs_addedit_type: Json_decode.field("pets.dialogs.addedit.type", Json_decode.string, json),
          pets_dialogs_addedit_apspent: Json_decode.field("pets.dialogs.addedit.apspent", Json_decode.string, json),
          pets_dialogs_addedit_totalap: Json_decode.field("pets.dialogs.addedit.totalap", Json_decode.string, json),
          pets_dialogs_addedit_protection: Json_decode.field("pets.dialogs.addedit.protection", Json_decode.string, json),
          pets_dialogs_addedit_attackname: Json_decode.field("pets.dialogs.addedit.attackname", Json_decode.string, json),
          pets_dialogs_addedit_attack: Json_decode.field("pets.dialogs.addedit.attack", Json_decode.string, json),
          pets_dialogs_addedit_parry: Json_decode.field("pets.dialogs.addedit.parry", Json_decode.string, json),
          pets_dialogs_addedit_damagepoints: Json_decode.field("pets.dialogs.addedit.damagepoints", Json_decode.string, json),
          pets_dialogs_addedit_reach: Json_decode.field("pets.dialogs.addedit.reach", Json_decode.string, json),
          pets_dialogs_addedit_actions: Json_decode.field("pets.dialogs.addedit.actions", Json_decode.string, json),
          pets_dialogs_addedit_skills: Json_decode.field("pets.dialogs.addedit.skills", Json_decode.string, json),
          pets_dialogs_addedit_specialabilities: Json_decode.field("pets.dialogs.addedit.specialabilities", Json_decode.string, json),
          pets_dialogs_addedit_notes: Json_decode.field("pets.dialogs.addedit.notes", Json_decode.string, json),
          pets_dialogs_addedit_addbtn: Json_decode.field("pets.dialogs.addedit.addbtn", Json_decode.string, json),
          pets_dialogs_addedit_savebtn: Json_decode.field("pets.dialogs.addedit.savebtn", Json_decode.string, json)
        };
}

function fromJson$108(yaml) {
  return Json_decode.list(l10n$59, yaml.uiL10n);
}

var UI = {
  fromJson: fromJson$108
};

function l10n$60(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          name: Json_decode.field("name", Json_decode.string, json),
          effect: Json_decode.field("effect", Json_decode.string, json),
          ritualTime: Json_decode.field("ritualTime", Json_decode.string, json),
          ritualTimeShort: Json_decode.field("ritualTimeShort", Json_decode.string, json),
          aeCost: Json_decode.field("aeCost", Json_decode.string, json),
          aeCostShort: Json_decode.field("aeCostShort", Json_decode.string, json),
          range: Json_decode.field("range", Json_decode.string, json),
          rangeShort: Json_decode.field("rangeShort", Json_decode.string, json),
          duration: Json_decode.field("duration", Json_decode.string, json),
          durationShort: Json_decode.field("durationShort", Json_decode.string, json),
          target: Json_decode.field("target", Json_decode.string, json),
          src: Json_decode.field("src", fromJson, json),
          errata: Json_decode.field("errata", fromJson$1, json)
        };
}

function fromJson$109(yaml) {
  return Json_decode.list(l10n$60, yaml.zibiljaRitualsL10n);
}

var ZibiljaRitualsL10n = {
  fromJson: fromJson$109
};

function univ$30(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          check: /* tuple */[
            Json_decode.field("check1", Json_decode.$$int, json),
            Json_decode.field("check2", Json_decode.$$int, json),
            Json_decode.field("check3", Json_decode.$$int, json)
          ],
          checkMod: Json_decode.field("checkMod", (function (param) {
                  return maybe(checkMod, param);
                }), json),
          ic: Json_decode.field("ic", fromJson$13, json),
          property: Json_decode.field("property", Json_decode.$$int, json),
          castingTimeNoMod: Json_decode.field("castingTimeNoMod", Json_decode.bool, json),
          aeCostNoMod: Json_decode.field("aeCostNoMod", Json_decode.bool, json),
          rangeNoMod: Json_decode.field("rangeNoMod", Json_decode.bool, json),
          durationNoMod: Json_decode.field("durationNoMod", Json_decode.bool, json)
        };
}

function fromJson$110(yaml) {
  return Json_decode.list(univ$30, yaml.zibiljaRitualsUniv);
}

var ZibiljaRitualsUniv = {
  fromJson: fromJson$110
};

exports.$$const = $$const;
exports.maybe = maybe;
exports.oneOrManyInt = oneOrManyInt;
exports.Id = Id;
exports.SourceRefs = SourceRefs;
exports.Errata = Errata;
exports.Prerequisites = Prerequisites;
exports.SelectOptionsL10n = SelectOptionsL10n;
exports.ICUniv = ICUniv;
exports.SelectOptionsUniv = SelectOptionsUniv;
exports.AdvantagesL10n = AdvantagesL10n;
exports.AdvantagesUniv = AdvantagesUniv;
exports.AnimistForcesL10n = AnimistForcesL10n;
exports.AnimistForcesUniv = AnimistForcesUniv;
exports.ArcaneBardTraditionsL10n = ArcaneBardTraditionsL10n;
exports.ArcaneDancerTraditionsL10n = ArcaneDancerTraditionsL10n;
exports.ArmorTypesL10n = ArmorTypesL10n;
exports.AspectsL10n = AspectsL10n;
exports.AttributesL10n = AttributesL10n;
exports.BlessedTraditionsL10n = BlessedTraditionsL10n;
exports.BlessedTraditionsUniv = BlessedTraditionsUniv;
exports.BlessingsL10n = BlessingsL10n;
exports.BlessingsUniv = BlessingsUniv;
exports.BrewsL10n = BrewsL10n;
exports.CantripsL10n = CantripsL10n;
exports.CantripsUniv = CantripsUniv;
exports.CombatSpecialAbilityGroupsL10n = CombatSpecialAbilityGroupsL10n;
exports.CombatTechniqueGroupsL10n = CombatTechniqueGroupsL10n;
exports.CombatTechniquesL10n = CombatTechniquesL10n;
exports.CombatTechniquesUniv = CombatTechniquesUniv;
exports.ConditionsL10n = ConditionsL10n;
exports.CulturesL10n = CulturesL10n;
exports.CulturesUniv = CulturesUniv;
exports.CursesL10n = CursesL10n;
exports.CursesUniv = CursesUniv;
exports.DerivedCharacteristicsL10n = DerivedCharacteristicsL10n;
exports.DisadvantagesL10n = DisadvantagesL10n;
exports.DisadvantagesUniv = DisadvantagesUniv;
exports.DominationRitualsL10n = DominationRitualsL10n;
exports.DominationRitualsUniv = DominationRitualsUniv;
exports.ElvenMagicalSongsL10n = ElvenMagicalSongsL10n;
exports.ElvenMagicalSongsUniv = ElvenMagicalSongsUniv;
exports.EquipmentL10n = EquipmentL10n;
exports.EquipmentUniv = EquipmentUniv;
exports.EquipmentGroupsL10n = EquipmentGroupsL10n;
exports.EquipmentPackagesL10n = EquipmentPackagesL10n;
exports.EquipmentPackagesUniv = EquipmentPackagesUniv;
exports.ExperienceLevelsL10n = ExperienceLevelsL10n;
exports.ExperienceLevelsUniv = ExperienceLevelsUniv;
exports.EyeColorsL10n = EyeColorsL10n;
exports.FocusRulesL10n = FocusRulesL10n;
exports.FocusRulesUniv = FocusRulesUniv;
exports.GeodeRitualsL10n = GeodeRitualsL10n;
exports.GeodeRitualsUniv = GeodeRitualsUniv;
exports.HairColorsL10n = HairColorsL10n;
exports.LiturgicalChantEnhancementsL10n = LiturgicalChantEnhancementsL10n;
exports.LiturgicalChantEnhancementsUniv = LiturgicalChantEnhancementsUniv;
exports.LiturgicalChantGroupsL10n = LiturgicalChantGroupsL10n;
exports.LiturgicalChantsL10n = LiturgicalChantsL10n;
exports.LiturgicalChantsUniv = LiturgicalChantsUniv;
exports.MagicalDancesL10n = MagicalDancesL10n;
exports.MagicalDancesUniv = MagicalDancesUniv;
exports.MagicalMelodiesL10n = MagicalMelodiesL10n;
exports.MagicalMelodiesUniv = MagicalMelodiesUniv;
exports.MagicalTraditionsL10n = MagicalTraditionsL10n;
exports.MagicalTraditionsUniv = MagicalTraditionsUniv;
exports.OptionalRulesL10n = OptionalRulesL10n;
exports.PactsL10n = PactsL10n;
exports.ProfessionsL10n = ProfessionsL10n;
exports.ProfessionsUniv = ProfessionsUniv;
exports.ProfessionVariantsL10n = ProfessionVariantsL10n;
exports.ProfessionVariantsUniv = ProfessionVariantsUniv;
exports.PropertiesL10n = PropertiesL10n;
exports.PublicationsL10n = PublicationsL10n;
exports.RacesL10n = RacesL10n;
exports.RacesUniv = RacesUniv;
exports.RaceVariantL10n = RaceVariantL10n;
exports.RaceVariantUniv = RaceVariantUniv;
exports.ReachesL10n = ReachesL10n;
exports.RogueSpellsL10n = RogueSpellsL10n;
exports.RogueSpellsUniv = RogueSpellsUniv;
exports.SkillGroupsL10n = SkillGroupsL10n;
exports.SkillsL10n = SkillsL10n;
exports.SkillsUniv = SkillsUniv;
exports.SocialStatusesL10n = SocialStatusesL10n;
exports.SpecialAbilitiesL10n = SpecialAbilitiesL10n;
exports.SpecialAbilitiesUniv = SpecialAbilitiesUniv;
exports.SpecialAbilityGroupsL10n = SpecialAbilityGroupsL10n;
exports.SpellEnhancementsL10n = SpellEnhancementsL10n;
exports.SpellEnhancementsUniv = SpellEnhancementsUniv;
exports.SpellGroupsL10n = SpellGroupsL10n;
exports.SpellsL10n = SpellsL10n;
exports.SpellsUniv = SpellsUniv;
exports.StatesL10n = StatesL10n;
exports.SubjectsL10n = SubjectsL10n;
exports.SupportedLanguagesL10n = SupportedLanguagesL10n;
exports.TribesL10n = TribesL10n;
exports.UI = UI;
exports.ZibiljaRitualsL10n = ZibiljaRitualsL10n;
exports.ZibiljaRitualsUniv = ZibiljaRitualsUniv;
/* No side effect */
