import * as Data from '../types/data.d';
import { match } from './match';
import { pipe } from './pipe';

/**
 * Converts the object generated by the list item to an object that can be
 * inserted into an array of ActiveObjects.
 * @param obj The entry for which you want to convert the object.
 * @param activate The object generated by the list item.
 */
export const convertUIStateToActiveObject =
  (activate: Data.ActivateArgs): Data.ActiveObject => {
    const { id, sel, sel2, input, tier, customCost } = activate;

    return pipe(
      active => typeof customCost === 'number' ? {
        ...active,
        cost: customCost
      } : active,
    )(
      match<string, Data.ActiveObject>(id)
        .on('ADV_68', () => ({
          sid: sel,
          sid2: input
        }))
        .on('DISADV_33', () => pipe<Data.ActiveObject>(
          obj => ([7, 8].includes(sel as number) && input) ? {
            ...obj,
            sid2: input
          } : obj,
        )({ sid: sel }))
        .on('SA_9', () => ({
          sid: sel,
          sid2: input || sel2,
        }))
        .otherwise(() => pipe<Data.ActiveObject>(
          obj => (sel !== undefined || input !== undefined) ? {
            ...obj,
            sid: input || sel,
          } : obj,
          obj => (obj.sid !== undefined && sel2 !== undefined) ? {
            ...obj,
            sid2: sel2,
          } : obj,
        )(tier !== undefined ? {
          tier,
        } : {}))
    );
  };
