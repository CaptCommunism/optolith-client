"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ProgressArc = function (_React$Component) {
  _inherits(ProgressArc, _React$Component);

  function ProgressArc() {
    _classCallCheck(this, ProgressArc);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ProgressArc).apply(this, arguments));
  }

  _createClass(ProgressArc, [{
    key: "render",
    value: function render() {
      var completed = Math.max(0, Math.min(1, this.props.completed));

      var params = {};
      params.cx = params.cy = this.props.diameter / 2;
      params.r = (this.props.diameter - 2 * this.props.strokeWidth) / 2;
      params.cir = 2 * Math.PI * params.r;
      params.offset = (1 - completed) * params.cir;

      return _react2.default.createElement(
        "svg",
        { width: this.props.diameter, height: this.props.diameter },
        _react2.default.createElement("circle", {
          className: "progress-arc--bg",
          cx: params.cx,
          cy: params.cy,
          r: params.r,
          fill: "none",
          stroke: this.props.background,
          strokeWidth: this.props.strokeWidth
        }),
        _react2.default.createElement("circle", {
          className: "progress-arc--fg",
          cx: params.cx,
          cy: params.cy,
          r: params.r,
          fill: "none",
          stroke: this.props.stroke,
          strokeWidth: this.props.strokeWidth,
          strokeDasharray: params.cir,
          style: {
            strokeDashoffset: params.offset,
            transformOrigin: 'center center',
            transform: 'rotate(-90deg)'
          }
        })
      );
    }
  }]);

  return ProgressArc;
}(_react2.default.Component);

ProgressArc.defaultProps = {
  stroke: '#444',
  diameter: 50,
  background: 'transparent',
  strokeWidth: 5
};

exports.default = ProgressArc;
module.exports = exports['default'];